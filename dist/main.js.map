{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/additional/additional-routing.module.ts","webpack:///./src/app/additional/additional.module.ts","webpack:///./src/app/additional/detail/detail.component.html","webpack:///./src/app/additional/detail/detail.component.scss","webpack:///./src/app/additional/detail/detail.component.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/core/admin-layout/admin-layout.component.html","webpack:///./src/app/core/admin-layout/admin-layout.component.ts","webpack:///./src/app/core/auth-layout/auth-layout.component.html","webpack:///./src/app/core/auth-layout/auth-layout.component.ts","webpack:///./src/app/core/header/header.component.html","webpack:///./src/app/core/header/header.component.scss","webpack:///./src/app/core/header/header.component.ts","webpack:///./src/app/core/image.ts","webpack:///./src/app/core/index.ts","webpack:///./src/app/core/login/login.component.html","webpack:///./src/app/core/login/login.component.scss","webpack:///./src/app/core/login/login.component.ts","webpack:///./src/app/core/menu-accordion/accordion.directive.ts","webpack:///./src/app/core/menu-accordion/accordionanchor.directive.ts","webpack:///./src/app/core/menu-accordion/accordionlink.directive.ts","webpack:///./src/app/core/menu-accordion/index.ts","webpack:///./src/app/core/menu/menu.component.ts","webpack:///./src/app/core/menu/menu.service.ts","webpack:///./src/app/core/notification/notification.component.html","webpack:///./src/app/core/notification/notification.component.ts","webpack:///./src/app/core/options/options.component.html","webpack:///./src/app/core/options/options.component.ts","webpack:///./src/app/core/sidebar/sidebar.component.html","webpack:///./src/app/core/sidebar/sidebar.component.ts","webpack:///./src/app/dependent/dependent-routing.module.ts","webpack:///./src/app/dependent/dependent.module.ts","webpack:///./src/app/dependent/detail/detail.component.html","webpack:///./src/app/dependent/detail/detail.component.scss","webpack:///./src/app/dependent/detail/detail.component.ts","webpack:///./src/app/dialogs/dialog-alert/dialog-alert.component.html","webpack:///./src/app/dialogs/dialog-alert/dialog-alert.component.scss","webpack:///./src/app/dialogs/dialog-alert/dialog-alert.component.ts","webpack:///./src/app/dialogs/dialog-detail/dialog-detail.component.html","webpack:///./src/app/dialogs/dialog-detail/dialog-detail.component.scss","webpack:///./src/app/dialogs/dialog-detail/dialog-detail.component.ts","webpack:///./src/app/dialogs/dialogs.module.ts","webpack:///./src/app/dialogs/layer-biometric/layer-biometric.component.html","webpack:///./src/app/dialogs/layer-biometric/layer-biometric.component.scss","webpack:///./src/app/dialogs/layer-biometric/layer-biometric.component.ts","webpack:///./src/app/dialogs/layer-document/layer-document.component.html","webpack:///./src/app/dialogs/layer-document/layer-document.component.scss","webpack:///./src/app/dialogs/layer-document/layer-document.component.ts","webpack:///./src/app/dialogs/layer-government/layer-government.component.html","webpack:///./src/app/dialogs/layer-government/layer-government.component.scss","webpack:///./src/app/dialogs/layer-government/layer-government.component.ts","webpack:///./src/app/dialogs/pdf/pdf.component.html","webpack:///./src/app/dialogs/pdf/pdf.component.scss","webpack:///./src/app/dialogs/pdf/pdf.component.ts","webpack:///./src/app/dialogs/view/image.ts","webpack:///./src/app/dialogs/view/pdf.ts","webpack:///./src/app/dialogs/view/view.component.html","webpack:///./src/app/dialogs/view/view.component.scss","webpack:///./src/app/dialogs/view/view.component.ts","webpack:///./src/app/document/detail/detail.component.html","webpack:///./src/app/document/detail/detail.component.scss","webpack:///./src/app/document/detail/detail.component.ts","webpack:///./src/app/document/document-routing.module.ts","webpack:///./src/app/document/document.module.ts","webpack:///./src/app/pages/auth/change-password/change-password.component.html","webpack:///./src/app/pages/auth/change-password/change-password.component.scss","webpack:///./src/app/pages/auth/change-password/change-password.component.ts","webpack:///./src/app/pages/auth/restorepassword/restorepassword.component.html","webpack:///./src/app/pages/auth/restorepassword/restorepassword.component.scss","webpack:///./src/app/pages/auth/restorepassword/restorepassword.component.ts","webpack:///./src/app/reference/detail/detail.component.html","webpack:///./src/app/reference/detail/detail.component.scss","webpack:///./src/app/reference/detail/detail.component.ts","webpack:///./src/app/reference/reference-routing.module.ts","webpack:///./src/app/reference/reference.module.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/confirm-dialog.service.ts","webpack:///./src/app/services/services-detalle-credito.service.ts","webpack:///./src/app/share/loading/loading.component.css","webpack:///./src/app/share/loading/loading.component.html","webpack:///./src/app/share/loading/loading.component.ts","webpack:///./src/app/share/share.module.ts","webpack:///./src/app/spouse/detail/detail.component.html","webpack:///./src/app/spouse/detail/detail.component.scss","webpack:///./src/app/spouse/detail/detail.component.ts","webpack:///./src/app/spouse/spouse-routing.module.ts","webpack:///./src/app/spouse/spouse.module.ts","webpack:///./src/app/work/detail/detail.component.html","webpack:///./src/app/work/detail/detail.component.scss","webpack:///./src/app/work/detail/detail.component.ts","webpack:///./src/app/work/work-routing.module.ts","webpack:///./src/app/work/work.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./dashboard/dashboard.module\": [\n\t\t\"./src/app/dashboard/dashboard.module.ts\",\n\t\t\"default~dashboard-dashboard-module~pages-pages-module\"\n\t],\n\t\"./pages/pages.module\": [\n\t\t\"./src/app/pages/pages.module.ts\",\n\t\t\"default~dashboard-dashboard-module~pages-pages-module\",\n\t\t\"pages-pages-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdditionalRoutingModule { }\n","import {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AdditionalRoutingModule } from './additional-routing.module';\nimport { DetailComponent } from './detail/detail.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatInputModule } from \"@angular/material/input\";\n\n\n@NgModule({\n    declarations: [\n        DetailComponent\n    ],\n    exports: [\n        DetailComponent\n    ],\n    imports: [\n        CommonModule,\n        AdditionalRoutingModule,\n        FlexLayoutModule,\n        MatCardModule,\n\n        MatInputModule\n    ],\n    schemas:[ CUSTOM_ELEMENTS_SCHEMA ]\n})\nexport class AdditionalModule { }\n","module.exports = \"<mat-card>\\n    <mat-card-header>\\n        <mat-card-title>Información adicional</mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"16px\\\">\\n            <div fxFlex=\\\"70\\\">\\n                <mat-label>País de nacimiento</mat-label>\\n                <p><strong>{{ country[ObjAdd.countryOfBirth]}}</strong></p>\\n                <mat-label>País de recidencia</mat-label>\\n                <p><strong>{{ country[ObjAdd.countryOfResidence]}}</strong></p>\\n            </div>\\n            <div fxFlex=\\\"30\\\">\\n                <mat-label>Nacionalidad</mat-label>\\n                <p><strong>{{ catNationality }}</strong></p>\\n            </div>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"16px\\\">\\n            <div fxFlex=\\\"50\\\">\\n                <mat-label>Estado civil</mat-label>\\n                <p><strong>{{ statecivil[ObjAdd.civilState]}}</strong></p>\\n            </div>\\n            <div fxFlex=\\\"50\\\">\\n                <mat-label>Condicion matrimonial</mat-label>\\n                <p><strong>{{ maritalStatus[ObjAdd.maritalStatus] }}</strong></p>\\n            </div>\\n        </div>\\n\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"16px\\\">\\n            <div fxFlex=\\\"50\\\">\\n                <mat-label>No. IMSS del solicitante</mat-label>\\n                <p><strong>{{ObjAdd.numberImss}}</strong></p>\\n            </div>\\n            <div fxFlex=\\\"50\\\">\\n                <mat-label>Escolaridad</mat-label>\\n                <p><strong>{{scholarship[ObjAdd.scholarship]}}</strong></p>\\n            </div>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"16px\\\">\\n            <div fxFlex=\\\"50\\\">\\n                <mat-label>Telefono de casa</mat-label>\\n                <p><strong>{{ObjAdd.phone}}</strong></p>\\n            </div>\\n            <div fxFlex=\\\"50\\\">\\n                <mat-label>Telefono celular</mat-label>\\n                <p><strong>{{ObjAdd.mobile}}</strong></p>\\n            </div>\\n        </div>\\n\\n        <label>Antiguedad en el domicilio</label>\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"16px\\\">\\n            <div fxFlex=\\\"50\\\">\\n                <mat-label>Colonia</mat-label>\\n                <p><strong>{{ObjAdd.suburb}}</strong></p>\\n            </div>\\n            <div fxFlex=\\\"50\\\">\\n                <mat-label>Codigo postal</mat-label>\\n                <p><strong>{{ObjAdd.postal_code}}</strong></p>\\n            </div>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"16px\\\">\\n            <div fxFlex=\\\"30\\\">\\n                <mat-label>Delegacion/Municipio/Demarcacion politica</mat-label>\\n                <p><strong>{{ObjAdd.municipality}}</strong></p>\\n            </div>\\n            <div fxFlex=\\\"30\\\">\\n                <mat-label>Ciudad/Poblacion</mat-label>\\n                <p><strong>{{ObjAdd.city}}</strong></p>\\n            </div>\\n            <div fxFlex=\\\"30\\\">\\n                <mat-label>Entidad federativa/Estado/Provincia</mat-label>\\n                <p><strong>{{ObjAdd.state}}</strong></p>\\n            </div>\\n        </div>\\n    </mat-card-content>\\n</mat-card>\\n\\n\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {RequestDetalleCredito} from '../../interfaces/request-detalle-credito';\nimport {ServicesDetalleCreditoService} from '../../services/services-detalle-credito.service';\nimport {Additional} from '../../interfaces/additional';\n\n@Component({\n    selector: 'app-additional-detail',\n    templateUrl: './detail.component.html',\n    styleUrls: ['./detail.component.scss']\n})\nexport class DetailComponent implements OnInit {\n    country: string[] = ['MEXICO', 'EXTRANJERO'];\n    nationality: string[] = ['Mexicana', 'Extranjera'];\n    scholarship: string[] = [\n        'PRIMERA',\n        'SECUNDARIO',\n        'PREPARATORIA',\n        'TECNICA',\n        'LICENCIATURA',\n        'POSTGRADO',\n        'SIN ESPECIFICAR'\n    ];\n    statecivil: string[] = ['SOLTERO', 'CASADO', 'OTRO'];\n    maritalStatus: string[] = ['BIENES MANCOMUNADOS', 'SEPARADOS'];\n\n\n    catNationality = this.nationality[0];\n    ObjAdd: Additional = {\n        idAdditionalInformaction:0,\n        countryOfBirth: -1,\n        countryOfResidence: -1,\n        nationality: null,\n        civilState: -1,\n        maritalStatus: '',\n        numberImss: '',\n        scholarship: '',\n        phone: '',\n        mobile: '',\n        otherPhone: '',\n        nowResidenceSeniority: '',\n        previousResidenceSeniority: '',\n        address: '',\n        external_number: '',\n        interior_number: '',\n        suburb: '',\n        municipality: '',\n        city: '',\n        state: '',\n        postal_code: '',\n        country: '',\n        creaditApplication: ''\n    };\n    constructor( private srvDetalle: ServicesDetalleCreditoService) {\n        if (srvDetalle.ObjDetalleCredito.additionalies != null) {\n            this.ObjAdd = srvDetalle.ObjDetalleCredito.additionalies;\n        }\n\n        if (this.ObjAdd.nationality == null) {\n            this.catNationality = '';\n        } else {\n            this.catNationality = this.nationality[this.ObjAdd.nationality];\n        }\n    }\n\n\n    ngOnInit(): void {\n    }\n\n}\n","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n\tselector: 'app-root',\n\ttemplate: '<router-outlet></router-outlet>'\n})\nexport class AppComponent {\n\tconstructor(translate: TranslateService) {\n\t\ttranslate.addLangs(['en', 'fr']);\n\t\ttranslate.setDefaultLang('en');\n\n\t\tconst browserLang: string = translate.getBrowserLang();\n\t\ttranslate.use(browserLang.match(/en|fr/) ? browserLang : 'en');\n\t}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule} from '@angular/router';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule, Provider} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\n\nimport { LocationStrategy, HashLocationStrategy} from \"@angular/common\";\n\n\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\nimport { LoadingBarRouterModule } from '@ngx-loading-bar/router';\n\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\n\nimport { AgmCoreModule } from '@agm/core';\n\nimport {\n  MatSidenavModule,\n  MatCardModule,\n  MatMenuModule,\n  MatCheckboxModule,\n  MatIconModule,\n  MatButtonModule,\n  MatToolbarModule,\n  MatTabsModule,\n  MatListModule,\n  MatSlideToggleModule,\n  MatSelectModule,\n  MatProgressBarModule,\n  MatDialogModule,\n  MatInputModule,\n  MatTableModule\n} from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BidiModule } from '@angular/cdk/bidi';\n\nimport {\n  MenuComponent,\n  HeaderComponent,\n  SidebarComponent,\n  NotificationComponent,\n  OptionsComponent,\n  AdminLayoutComponent,\n  AuthLayoutComponent,\n  AccordionAnchorDirective,\n  AccordionLinkDirective,\n  AccordionDirective,\n} from './core';\n\nimport { AppRoutes } from './app.routing';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './core/login/login.component';\nimport {MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\nimport {RestorepasswordComponent} from \"./pages/auth/restorepassword/restorepassword.component\";\n\nimport {DialogsModule} from \"./dialogs/dialogs.module\";\nimport {ChangePasswordComponent} from \"./pages/auth/change-password/change-password.component\";\nimport {DashboardModule} from \"./dashboard/dashboard.module\";\nimport {PagesModule} from \"./pages/pages.module\";\nimport {ShareModule} from \"./share/share.module\";\n\n\n\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true,\n  wheelSpeed: 2,\n  wheelPropagation: true,\n  minScrollbarLength: 20\n};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    SidebarComponent,\n    NotificationComponent,\n    OptionsComponent,\n    MenuComponent,\n    AdminLayoutComponent,\n    AuthLayoutComponent,\n    AccordionAnchorDirective,\n    AccordionLinkDirective,\n    AccordionDirective,\n    LoginComponent,\n    RestorepasswordComponent,\n    ChangePasswordComponent\n\n\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot(AppRoutes, { useHash: true }),\n    FormsModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient]\n      }\n    }),\n    LoadingBarRouterModule,\n    DialogsModule,\n    ShareModule,\n    MatSidenavModule,\n    MatCardModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatTabsModule,\n    MatListModule,\n    MatSlideToggleModule,\n    MatSelectModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    MatInputModule,\n    MatTableModule,\n    FlexLayoutModule,\n    BidiModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'YOURAPIKEY'\n    }),\n    PerfectScrollbarModule,\n  ],\n  providers: [\n    {\n      provide: PERFECT_SCROLLBAR_CONFIG,\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG\n    }\n  ],\n  exports: [],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Routes } from '@angular/router';\n\nimport { AdminLayoutComponent, AuthLayoutComponent, LoginComponent } from './core';\nimport {RestorepasswordComponent} from \"./pages/auth/restorepassword/restorepassword.component\";\nimport {AdministrationComponent} from \"./pages/administration/administration.component\";\nimport {AdministradorGuard} from \"./guard/administrador.guard\";\nimport {PromotorGuard} from \"./guard/promotor.guard\";\nimport {ConsultaGuard} from \"./guard/consulta.guard\";\nimport {ChangePasswordComponent} from \"./pages/auth/change-password/change-password.component\";\nimport {TodosGuard} from \"./guard/todos.guard\";\n\nexport const AppRoutes: Routes = [\n    {\n        path: '',\n        component: LoginComponent,\n    },\n    {\n        path: '',\n        component: AdminLayoutComponent,\n        children: [{\n                path: 'dashboard',\n                loadChildren: './dashboard/dashboard.module#DashboardModule'\n        },{\n            path: '',\n            loadChildren: './pages/pages.module#PagesModule'\n        }]\n    },\n    {\n\n        path: 'restorechange',\n        component: RestorepasswordComponent\n\n    },\n    {\n\n        path: 'passwordchange',\n        component: ChangePasswordComponent\n    },\n    {\n        path: '**',\n        redirectTo: 'session/404'\n    }\n];\n","module.exports = \"<div class=\\\" mat-typography\\\" [dir]=\\\"options.dir\\\" [ngClass]=\\\"{'app-dark': options.dark, 'boxed': options.boxed, 'collapsed-sidebar': options.collapsed, 'compact-sidebar': options.compact, 'side-panel-opened': sidePanelOpened, 'side-panel-closed': !sidePanelOpened }\\\">\\n    <ngx-loading-bar color=\\\"#009688\\\"></ngx-loading-bar>\\n    <app-header (toggleSidenav)=\\\"sidemenu.toggle()\\\" (toggleNotificationSidenav)=\\\"notifications.toggle()\\\"></app-header>\\n\\n    <mat-sidenav-container class=\\\"app-inner\\\">\\n        <mat-sidenav #sidemenu class=\\\"sidebar-panel\\\" id=\\\"sidebar-panel\\\" [mode]=\\\"isOver() ? 'over' : 'side'\\\" [opened]=\\\"isOver()\\\"\\n                     (openedStart)=\\\"sidePanelOpened = true\\\" (closedStart)=\\\"sidePanelOpened = false\\\" (mouseover)=\\\"menuMouseOver()\\\"\\n                     (mouseout)=\\\"menuMouseOut()\\\" [perfectScrollbar]=\\\"config\\\" [disabled]=\\\"mediaMatcher.matches\\\">\\n            <app-sidebar (click)=\\\"updatePS()\\\"></app-sidebar>\\n        </mat-sidenav>\\n        <mat-sidenav #notifications position=\\\"end\\\" class=\\\"chat-panel\\\" mode=\\\"over\\\" opened=\\\"false\\\">\\n            <app-notification></app-notification>\\n        </mat-sidenav>\\n        <div [perfectScrollbar]=\\\"config\\\" [disabled]=\\\"mediaMatcher.matches\\\">\\n            <router-outlet></router-outlet>\\n        </div>\\n    </mat-sidenav-container>\\n</div>\\n\"","import {\n\tComponent,\n\tElementRef,\n\tNgZone,\n\tOnInit,\n\tOnDestroy,\n\tViewChild,\n\tHostListener\n} from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { TranslateService } from '@ngx-translate/core';\n\nimport {\n\tPerfectScrollbarConfigInterface,\n\tPerfectScrollbarDirective\n} from 'ngx-perfect-scrollbar';\n\nconst SMALL_WIDTH_BREAKPOINT = 960;\n\n@Component({\n\tselector: 'app-layout',\n\ttemplateUrl: './admin-layout.component.html'\n})\nexport class AdminLayoutComponent implements OnInit, OnDestroy {\n\tprivate _router: Subscription;\n\n\tmediaMatcher: MediaQueryList = matchMedia(\n\t\t`(max-width: ${SMALL_WIDTH_BREAKPOINT}px)`\n\t);\n\turl: string;\n\tsidePanelOpened;\n\toptions = {\n\t\tcollapsed: false,\n\t\tcompact: false,\n\t\tboxed: true,\n\t\tdark: false,\n\t\tdir: 'ltr'\n\t};\n\n\t@ViewChild('sidemenu')\n\tsidemenu;\n\t@ViewChild(PerfectScrollbarDirective)\n\tdirectiveScroll: PerfectScrollbarDirective;\n\n\tpublic config: PerfectScrollbarConfigInterface = {};\n\n\tconstructor(\n\t\tprivate _element: ElementRef,\n\t\tprivate router: Router,\n\t\tzone: NgZone\n\t) {\n\t\tthis.mediaMatcher.addListener(mql =>\n\t\t\tzone.run(() => {\n\t\t\t\tthis.mediaMatcher = mql;\n\t\t\t})\n\t\t);\n\t}\n\n\tngOnInit(): void {\n\t\tthis.url = this.router.url;\n\n\t\tthis._router = this.router.events\n\t\t\t.pipe(filter(event => event instanceof NavigationEnd))\n\t\t\t.subscribe((event: NavigationEnd) => {\n\t\t\t\tdocument.querySelector(\n\t\t\t\t\t'.app-inner > .mat-drawer-content > div'\n\t\t\t\t).scrollTop = 0;\n\t\t\t\tthis.url = event.url;\n\t\t\t\tthis.runOnRouteChange();\n\t\t\t});\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis._router.unsubscribe();\n\t}\n\n\trunOnRouteChange(): void {\n\t\t/*if (this.isOver()) {\n\t\t\tthis.sidemenu.close();\n\t\t}*/\n\t\tthis.sidemenu.close();\n\t\tthis.updatePS();\n\t}\n\n\treceiveOptions($event): void {\n\t\tthis.options = $event;\n\t}\n\n\tisOver(): boolean {\n\t\treturn this.mediaMatcher.matches;\n\t}\n\n\tmenuMouseOver(): void {\n\t\tif (this.mediaMatcher.matches && this.options.collapsed) {\n\t\t\tthis.sidemenu.mode = 'over';\n\t\t}\n\t}\n\n\tmenuMouseOut(): void {\n\t\tif (this.mediaMatcher.matches && this.options.collapsed) {\n\t\t\tthis.sidemenu.mode = 'side';\n\t\t}\n\t}\n\n\tupdatePS(): void {\n\t\tif (!this.mediaMatcher.matches && !this.options.compact) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.directiveScroll.update();\n\t\t\t}, 350);\n\t\t}\n\t}\n}\n","module.exports = \"<mat-sidenav-container  class=\\\"app-inner\\\">\\n  <router-outlet></router-outlet>\\n</mat-sidenav-container>\\n\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-layout',\n  styles: [\n    ':host .mat-drawer-content {padding: 0;} .mat-drawer-container {z-index: 1000}'\n  ],\n  templateUrl: './auth-layout.component.html'\n})\nexport class AuthLayoutComponent {\n  // this.router.navigate([ruta])\n}\n","module.exports = \"\\t<mat-toolbar class=\\\"layout-wrapper layout-menu-overlay\\\">\\n\\t\\t<div class=\\\"topbar\\\">\\n\\t\\t\\t<div class=\\\"topbar-main\\\" fxLayoutAlign=\\\"center\\\">\\n\\t\\t\\t\\t<button (click)=\\\"toggleSidenav.emit()\\\" mat-icon-button>\\n\\t\\t\\t\\t\\t<mat-icon>menu</mat-icon>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t<a><img id=\\\"logo\\\"  src=\\\"assets/images/pimapngw.png\\\" alt=\\\"\\\" class=\\\"logo\\\"></a>\\n\\t\\t\\t\\t<div class=\\\"app-name\\\">PIMA</div>\\n\\t\\t\\t\\t<span>&nbsp;</span>\\n\\t\\t\\t\\t<span fxFlex></span>\\n\\t\\t\\t\\t<span id=\\\"user-display\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"end\\\">\\n\\t\\t\\t\\t\\t<span class=\\\"username\\\">{{ authService.UserAuth.name}} {{ authService.UserAuth.paternalLastName}} {{ authService.UserAuth.motherLastName}}</span>\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t<button [matMenuTriggerFor]=\\\"user\\\" mat-icon-button class=\\\"ml-xs\\\">\\n\\t\\t\\t\\t\\t<mat-icon>person</mat-icon>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t<mat-menu #user=\\\"matMenu\\\" x-position=\\\"before\\\">\\n\\t\\t\\t\\t\\t<button mat-menu-item (click)=\\\"passwordchange()\\\" >\\n\\t\\t\\t\\t\\t\\t<mat-icon>mode_edit</mat-icon>\\n\\t\\t\\t\\t\\t\\tCambiar contraseña\\n\\t\\t\\t\\t\\t</button>\\n\\n\\t\\t\\t\\t\\t<button mat-menu-item (click)=\\\"logout()\\\">\\n\\t\\t\\t\\t\\t\\t<mat-icon>exit_to_app</mat-icon>\\n\\t\\t\\t\\t\\t\\tCerrar sesión\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</mat-menu>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n</mat-toolbar>\\n\\n\"","module.exports = \"mat-toolbar {\\n  background-color: #2461cc; }\\n\\n.mat-toolbar-row, .mat-toolbar-single-row {\\n  padding: 0px; }\\n\"","import { Component, EventEmitter, Output,OnInit } from '@angular/core';\n\nimport * as screenfull from 'screenfull';\nimport {AuthService} from \"../../services/auth.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls:['./header.component.scss']\n})\nexport class HeaderComponent {\n    profile = [\"Administrador\",\"Comercial\",\"Mesa de control\"];\n    @Output()\n    toggleSidenav = new EventEmitter<void>();\n    @Output()\n    toggleNotificationSidenav = new EventEmitter<void>();\n\n    constructor(private authService:AuthService,\n                private router:Router\n    ) {}\n\n    ngOnInit(){\n        this.toggleSidenav.emit();\n    }\n\n\n    fullScreenToggle(): void {\n        if (screenfull.enabled) {\n            screenfull.toggle();\n        }\n    }\n\n    logout(){\n        this.authService.logoutUser();\n        this.router.navigate([\"/\"]);\n    }\n\n    passwordchange(){\n        this.router.navigate([\"passwordchange\"]);\n    }\n}\n","export const image = '';\n","export * from './admin-layout/admin-layout.component';\nexport * from './auth-layout/auth-layout.component';\nexport * from './header/header.component';\nexport * from './sidebar/sidebar.component';\nexport * from './notification/notification.component';\nexport * from './menu/menu.component';\nexport * from './menu-accordion';\nexport * from './options/options.component';\nexport * from './login/login.component';\n","module.exports = \"\\n<div class=\\\"login-body\\\">\\n    <app-loading [hidden]=\\\"loading\\\"></app-loading>\\n    <div class=\\\"login-panel ui-fluid\\\">\\n        <div class=\\\"ui-g\\\">\\n            <div class=\\\"ui-g-12 logo-container\\\">\\n                <img src=\\\"assets/images/pimalogo.png\\\"/>\\n                <h1>Bienvenido(a)</h1>\\n                <h2>Ingresa tu datos</h2>\\n            </div>\\n\\n            <div fxLayout=\\\"row\\\" fxFlex=\\\"100\\\">\\n                <mat-form-field fxFlex=\\\"100\\\" appearance=\\\"outline\\\">\\n                    <mat-label>Nombre del usuario</mat-label>\\n                    <input matInput placeholder=\\\"Nombre del usuario\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" required>\\n                </mat-form-field>\\n            </div>\\n            <div fxLayout=\\\"row\\\" fxFlex=\\\"100\\\">\\n                <mat-form-field fxFlex=\\\"100\\\" appearance=\\\"outline\\\">\\n                    <mat-label>Contraseña</mat-label>\\n                    <input matInput placeholder=\\\"contraseña\\\" [(ngModel)]=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" required>\\n                </mat-form-field>\\n            </div>\\n            <div fxLayout=\\\"row\\\"  fxFlex=\\\"100\\\">\\n                <button mat-raised-button fxFlex=\\\"100\\\" (click)=\\\"login()\\\" color=\\\"primary\\\" style=\\\"margin-top:12px;\\\">Login</button>\\n            </div>\\n\\n            <div fxLayout=\\\"row\\\"  fxFlex=\\\"100\\\">\\n                <span>Olvidaste tú contraseña? <a (click)=\\\"restorechange()\\\">Click Aqui</a></span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\"","module.exports = \".app-login {\\n  background-color: 1; }\\n\\n.image {\\n  background-image: url(\\\"https://source.unsplash.com/random\\\");\\n  background-repeat: no-repeat !important;\\n  background-size: 100% 100%;\\n  background-position: center !important; }\\n\\n.MuiTypography-h5 {\\n  margin: 0;\\n  font-size: 1.5rem;\\n  font-family: Roboto,\\\"Helvetica Neue\\\",Arial,sans-serif;\\n  font-weight: 400;\\n  line-height: 1.33; }\\n\\nmat-card {\\n  margin-top: 8rem;\\n  padding: 12px; }\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material\";\nimport { AuthService } from \"../../services/auth.service\";\nimport {ConfirmDialogService} from \"../../services/confirm-dialog.service\";\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n    username: string;\n    password: string;\n    loading = true;\n    options = {\n        title: 'ATENCION',\n        message: '',\n        cancelText: null,\n        confirmText: 'CERRAR'\n    };\n\n    constructor(private router: Router,\n                private authService:AuthService,\n                private dialogService: ConfirmDialogService,) {\n\n    }\n\n    ngOnInit() {\n\n    }\n\n    login() {\n\n\n\n        if (this.username == '' || this.username == null) {\n            this.options.message = \"El usuario no puede ser vacio\";\n            this.dialogService.open(this.options);\n            return false;\n        }\n\n        if (this.password == '' || this.password == null) {\n            this.options.message = \"Su contraseña  no puede ser vacio\";\n            this.dialogService.open(this.options);\n            return false;\n        }\n\n        this.loading = false;\n        this.authService.loginUser(this.username,this.password)\n        .subscribe(\n            data  => {\n                if (data.result == true ) {\n                    this.authService.UserAuth.idUser = data.data.idUser;\n                    this.authService.UserAuth.name = data.data.name;\n                    this.authService.UserAuth.paternalLastName = data.data.paternalLastName;\n                    this.authService.UserAuth.motherLastName = data.data.motherLastName;\n                    this.authService.UserAuth.email = data.data.email;\n                    this.authService.UserAuth.profileId = data.data.profileId;\n                    this.authService.setUser(data.data);\n                    if (data.message == 'ChangePassword'){\n                        this.router.navigate(['passwordchange']);\n                    } else {\n\n                        this.loading = true;\n                        this.router.navigate(['dashboard']);\n                    }\n\n                } else {\n                    this.loading = true;\n                    this.options.message = \"Error en la autentificacion\";\n                    this.dialogService.open(this.options);\n                }\n            },\n            error => {\n                this.loading = true;\n                this.options.message = \"Error en la aplicación\";\n                this.dialogService.open(this.options);\n            }\n        )\n    }\n\n    restorechange(){\n        this.loading = true;\n        this.router.navigate(['restorechange']);\n    }\n}\n","import {\n  Directive,\n  OnInit,\n  AfterViewInit,\n  AfterContentChecked\n} from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\nimport { AccordionLinkDirective } from './accordionlink.directive';\n\n@Directive({\n  selector: '[appAccordion]'\n})\nexport class AccordionDirective implements AfterContentChecked {\n  protected navlinks: Array<AccordionLinkDirective> = [];\n\n  closeOtherLinks(openLink: AccordionLinkDirective): void {\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\n      if (link !== openLink) {\n        link.open = false;\n      }\n    });\n  }\n\n  addLink(link: AccordionLinkDirective): void {\n    this.navlinks.push(link);\n  }\n\n  removeGroup(link: AccordionLinkDirective): void {\n    const index = this.navlinks.indexOf(link);\n    if (index !== -1) {\n      this.navlinks.splice(index, 1);\n    }\n  }\n\n  checkOpenLinks() {\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\n      if (link.group) {\n        const routeUrl = this.router.url;\n        const currentUrl = routeUrl.split('/');\n        if (currentUrl.indexOf(link.group) > 0) {\n          link.open = true;\n          this.closeOtherLinks(link);\n        }\n      }\n    });\n  }\n\n  ngAfterContentChecked(): void {\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationEnd))\n      .subscribe(e => this.checkOpenLinks());\n  }\n\n  constructor(private router: Router) {\n    setTimeout(() => this.checkOpenLinks());\n  }\n}\n","import { Directive, HostListener, Inject } from '@angular/core';\n\nimport { AccordionLinkDirective } from './accordionlink.directive';\n\n@Directive({\n  selector: '[appAccordionToggle]'\n})\nexport class AccordionAnchorDirective {\n  protected navlink: AccordionLinkDirective;\n\n  constructor(@Inject(AccordionLinkDirective) navlink: AccordionLinkDirective) {\n    this.navlink = navlink;\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(e: any) {\n    this.navlink.toggle();\n  }\n}\n","import {\n  Directive,\n  HostBinding,\n  Inject,\n  Input,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\n\nimport { AccordionDirective } from './accordion.directive';\n\n@Directive({\n  selector: '[appAccordionLink]'\n})\nexport class AccordionLinkDirective implements OnInit, OnDestroy {\n  @Input()\n  public group: any;\n\n  @HostBinding('class.open')\n  @Input()\n  get open(): boolean {\n    return this._open;\n  }\n\n  set open(value: boolean) {\n    this._open = value;\n    if (value) {\n      this.nav.closeOtherLinks(this);\n    }\n  }\n\n  protected _open: boolean;\n  protected nav: AccordionDirective;\n\n  constructor(@Inject(AccordionDirective) nav: AccordionDirective) {\n    this.nav = nav;\n  }\n\n  ngOnInit(): any {\n    this.nav.addLink(this);\n  }\n\n  ngOnDestroy(): any {\n    this.nav.removeGroup(this);\n  }\n\n  toggle(): any {\n    this.open = !this.open;\n  }\n}\n","export * from './accordionanchor.directive';\nexport * from './accordionlink.directive';\nexport * from './accordion.directive';\n","import { Component } from '@angular/core';\nimport { MenuService } from './menu.service';\n\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-menu',\n  template: `\n    <mat-nav-list appAccordion class=\"navigation\">\n      <mat-list-item appAccordionLink *ngFor=\"let menuitem of menuService.getAll()\" group=\"{{menuitem.state}}\">\n        <a appAccordionToggle class=\"relative\" [routerLink]=\"['/', menuitem.state]\" *ngIf=\"menuitem.type === 'link'\">\n          <mat-icon>{{ menuitem.icon }}</mat-icon>\n          <span>{{ menuitem.name | translate }}</span>\n          <span fxFlex></span>\n          <span class=\"menu-badge mat-{{ badge.type }}\" *ngFor=\"let badge of menuitem.badge\">{{ badge.value }}</span>\n        </a>\n        <a appAccordionToggle class=\"relative\" href=\"{{menuitem.state}}\" *ngIf=\"menuitem.type === 'extLink'\">\n          <mat-icon>{{ menuitem.icon }}</mat-icon>\n          <span>{{ menuitem.name | translate }}</span>\n          <span fxFlex></span>\n          <span class=\"menu-badge mat-{{ badge.type }}\" *ngFor=\"let badge of menuitem.badge\">{{ badge.value }}</span>\n        </a>\n        <a appAccordionToggle class=\"relative\" href=\"{{menuitem.state}}\" target=\"_blank\" *ngIf=\"menuitem.type === 'extTabLink'\">\n          <mat-icon>{{ menuitem.icon }}</mat-icon>\n          <span>{{ menuitem.name | translate }}</span>\n          <span fxFlex></span>\n          <span class=\"menu-badge mat-{{ badge.type }}\" *ngFor=\"let badge of menuitem.badge\">{{ badge.value }}</span>\n        </a>\n        <a appAccordionToggle class=\"relative\" href=\"javascript:;\" *ngIf=\"menuitem.type === 'sub'\">\n          <mat-icon>{{ menuitem.icon }}</mat-icon>\n          <span>{{ menuitem.name | translate }}</span>\n          <span fxFlex></span>\n          <span class=\"menu-badge mat-{{ badge.type }}\" *ngFor=\"let badge of menuitem.badge\">{{ badge.value }}</span>\n          <mat-icon class=\"menu-caret\">arrow_drop_down</mat-icon>\n        </a>\n        <mat-nav-list class=\"sub-menu\" *ngIf=\"menuitem.type === 'sub'\">\n          <mat-list-item *ngFor=\"let childitem of menuitem.children\" routerLinkActive=\"open\">\n            <a [routerLink]=\"['/', menuitem.state, childitem.state ]\" class=\"relative\">{{ childitem.name | translate }}</a>\n          </mat-list-item>\n        </mat-nav-list>\n      </mat-list-item>\n    </mat-nav-list>`,\n  providers: [MenuService]\n})\nexport class MenuComponent {\n  currentLang = 'en';\n\n  constructor(\n    public menuService: MenuService,\n    public translate: TranslateService\n  ) {}\n\n  addMenuItem(): void {\n    this.menuService.add({\n      state: 'menu',\n      name: 'MENU',\n      type: 'sub',\n      icon: 'trending_flat',\n      children: [\n        { state: 'menu', name: 'MENU' },\n        { state: 'timeline', name: 'MENU' }\n      ]\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\nexport interface BadgeItem {\n\ttype: string;\n\tvalue: string;\n}\n\nexport interface ChildrenItems {\n\tstate: string;\n\tname: string;\n\ttype?: string;\n}\n\nexport interface Menu {\n\tstate: string;\n\tname: string;\n\ttype: string;\n\ticon: string;\n\tbadge?: BadgeItem[];\n\tchildren?: ChildrenItems[];\n}\n\nconst MENUITEMS = [\n\t{\n\t\tstate: 'dashboard',\n\t\tname: 'Dashboard',\n\t\ttype: 'link',\n\t\ticon: 'dashboard'\n\t},{\n\t\tstate: 'enrolments',\n\t\tname: 'Enrolamientos',\n\t\ttype: 'sub',\n\t\ticon: 'person',\n\t\tchildren: [\n\t\t\t{ state: 'list', name: 'listado', icon: 'list' }\n\t\t]\n\t},{\n\t\tstate: 'administration',\n\t\tname: 'Administración',\n\t\ttype: 'sub',\n\t\ticon: 'supervisor_account',\n\t\tchildren: [\n\t\t\t{ state: 'list', name: 'Usuarios', icon: 'supervisor_account' },\n\t\t\t{ state: 'leaflet', name: 'Prospectos', icon: 'list' }\n\t\t]\n\t}\n];\n\n@Injectable()\nexport class MenuService {\n\tgetAll(): Menu[] {\n\t\treturn MENUITEMS;\n\t}\n\n\tadd(menu) {\n\t\tMENUITEMS.push(menu);\n\t}\n}\n","module.exports = \"<mat-tab-group [selectedIndex]=\\\"1\\\" mat-stretch-tabs>\\n  <mat-tab>\\n    <ng-template matTabLabel>Hoy</ng-template>\\n    <div class=\\\"scroll\\\">\\n      <mat-list class=\\\"pt-1 pb-1\\\">\\n        <mat-list-item>\\n          <div fxLayout=\\\"column\\\">\\n            <h1 class=\\\"ma-0\\\">{{ today | date:'EEEE' }}</h1>\\n            <h3 class=\\\"mat-text-muted ma-0\\\"><span>{{ today | date:'dd' }}</span>&nbsp;<span>{{ today | date:'MMMM' }}</span></h3>\\n          </div>\\n        </mat-list-item>\\n      </mat-list>\\n      <mat-nav-list>\\n        <mat-divider></mat-divider>\\n        <h3 mat-subheader class=\\\"text-uppercase font-weight-bold\\\">Stocks</h3>\\n        <mat-list-item>\\n          <a matLine href=\\\"javascript:;\\\">NASDAQ</a>\\n          <span class=\\\"mat-text-muted text-md mr-xs ml-xs\\\">4,492.87</span>\\n          <span>-0.29%</span>\\n        </mat-list-item>\\n        <mat-list-item>\\n          <a matLine href=\\\"javascript:;\\\">NYSE</a>\\n          <span class=\\\"mat-text-muted text-md mr-xs ml-xs\\\">10,692.07</span>\\n          <span>-0.53%</span>\\n        </mat-list-item>\\n        <mat-list-item>\\n          <a matLine href=javascript:;>DOW J</a>\\n          <span class=\\\"mat-text-muted text-md mr-xs ml-xs\\\">17,046.81</span>\\n          <span>-0.14%</span>\\n        </mat-list-item>\\n        <mat-list-item>\\n          <a matLine href=\\\"javascript:;\\\">APPL</a>\\n          <span class=\\\"mat-text-muted text-md mr-xs ml-xs\\\">100,89</span>\\n          <span>+0.75%</span>\\n        </mat-list-item>\\n        <mat-divider></mat-divider>\\n        <h3 mat-subheader class=\\\"text-uppercase font-weight-bold\\\">Weather</h3>\\n        <mat-list-item>\\n          <a matLine href=\\\"javascript:;\\\">{{ today | date:'shortTime' }}</a>\\n          <p matLine class=\\\"mat-text-muted\\\">London</p>\\n          <span class=\\\"mat-h1 mr-1\\\">\\n            <span class=\\\"pe-is-w-blizzard\\\"></span>\\n          </span>\\n          <span class=\\\"mat-h1\\\">26°</span>\\n        </mat-list-item>\\n        <mat-divider></mat-divider>\\n        <h3 mat-subheader class=\\\"text-uppercase font-weight-bold\\\">Todo</h3>\\n        <mat-list-item>\\n          <a matLine href=\\\"javascript:;\\\">Learn Angular 2.0</a>\\n          <p matLine class=\\\"mat-text-muted text-md\\\">2:45PM</p>\\n        </mat-list-item>\\n        <mat-list-item>\\n          <a matLine href=\\\"javascript:;\\\">Learn Angular Material</a>\\n          <p matLine class=\\\"mat-text-muted text-md\\\">3:20PM</p>\\n        </mat-list-item>\\n        <mat-list-item>\\n          <a matLine href=\\\"javascript:;\\\">Write documentation</a>\\n          <p matLine class=\\\"mat-text-muted text-md\\\">6:00PM</p>\\n        </mat-list-item>\\n        <mat-divider class=\\\"mt-xs mb-xs\\\"></mat-divider>\\n        <h3 mat-subheader class=\\\"text-uppercase font-weight-bold\\\">Stats</h3>\\n        <mat-list-item>\\n          <p class=\\\"text-md\\\" matLine>Local Storage (4023 / 10690)</p>\\n          <mat-progress-bar matLine mode=\\\"determinate\\\" color=\\\"warn\\\" value=\\\"40\\\"></mat-progress-bar>\\n        </mat-list-item>\\n        <mat-list-item>\\n          <p class=\\\"text-md\\\" matLine>Cloud Storage (700 / 1030)</p>\\n          <mat-progress-bar matLine mode=\\\"determinate\\\" color=\\\"accent\\\" value=\\\"70\\\"></mat-progress-bar>\\n        </mat-list-item>\\n        <mat-list-item>\\n          <p class=\\\"text-md\\\" matLine>Local Storage (20 / 100)</p>\\n          <mat-progress-bar matLine mode=\\\"determinate\\\" value=\\\"20\\\"></mat-progress-bar>\\n        </mat-list-item>\\n      </mat-nav-list>\\n    </div>\\n  </mat-tab>\\n  <mat-tab>\\n    <ng-template matTabLabel>Notificaciones</ng-template>\\n    <div class=\\\"scroll\\\">\\n      <mat-nav-list>\\n        <mat-list-item>\\n          <mat-icon mat-list-avatar class=\\\"mat-text-primary\\\">people</mat-icon>\\n          <h4 matLine>Social</h4>\\n          <p matLine>Ligula Purus Adipiscing</p>\\n        </mat-list-item>\\n        <mat-list-item>\\n          <mat-icon mat-list-avatar class=\\\"mat-text-warn\\\">local_offer</mat-icon>\\n          <h4 matLine>Promotions</h4>\\n          <p matLine>Etiam Ligula Dapibus</p>\\n        </mat-list-item>\\n        <mat-list-item>\\n          <mat-icon mat-list-avatar class=\\\"mat-text-accent\\\">info</mat-icon>\\n          <h4 matLine>Updates</h4>\\n          <p matLine>Sollicitudin Euismod Fringilla</p>\\n        </mat-list-item>\\n\\n        <mat-list-item>\\n          <mat-icon mat-list-avatar class=\\\"mat-indigo\\\">delete_sweep</mat-icon>\\n          <h4 matLine>Removed 6 items from task list</h4>\\n          <span class=\\\"text-md mat-text-muted\\\" matLine>{{ 1427207139000 | date: 'fullDate' }}</span>\\n        </mat-list-item>\\n        <mat-list-item>\\n          <mat-icon mat-list-avatar>check_circle</mat-icon>\\n          <h4 matLine>Completed 2 projects</h4>\\n          <span class=\\\"text-md mat-text-muted\\\" matLine>{{ 1427412725000 | date: 'fullDate' }}</span>\\n        </mat-list-item>\\n        <mat-list-item>\\n          <mat-icon mat-list-avatar>notifications_paused</mat-icon>\\n          <h4 matLine>Muted notifications</h4>\\n          <span class=\\\"text-md mat-text-muted\\\" matLine>{{ 1427546580000 | date: 'fullDate' }}</span>\\n        </mat-list-item>\\n        <mat-list-item>\\n          <mat-icon mat-list-avatar>person_add</mat-icon>\\n          <h4 matLine>Added Joel to contact list</h4>\\n          <span class=\\\"text-md mat-text-muted\\\" matLine>{{ 1428275520000 | date: 'fullDate' }}</span>\\n        </mat-list-item>\\n        <mat-list-item>\\n          <mat-icon mat-list-avatar>phone_missed</mat-icon>\\n          <h4 matLine>Missed live call from Ellie</h4>\\n          <span class=\\\"text-md mat-text-muted\\\" matLine>{{ 1428830580000 | date: 'fullDate' }}</span>\\n        </mat-list-item>\\n        <mat-list-item>\\n          <mat-icon mat-list-avatar>group_add</mat-icon>\\n          <h4 matLine>You've been added to HR group</h4>\\n          <span class=\\\"text-md mat-text-muted\\\" matLine>{{ 1429363920000 | date: 'fullDate' }}</span>\\n        </mat-list-item>\\n      </mat-nav-list>\\n    </div>\\n  </mat-tab>\\n</mat-tab-group>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.component.html'\n})\nexport class NotificationComponent {\n  today: number = Date.now();\n  constructor() {}\n}\n","module.exports = \"<!-- Demo Purposes Only -->\\n<button mat-fab color=\\\"warn\\\" class=\\\"mat-fab-bottom-right\\\" (click)=\\\"showSettings = true\\\" style=\\\"z-index: 9;\\\">\\n  <mat-icon class=\\\"mat-24\\\">settings</mat-icon>\\n</button>\\n<mat-card class=\\\"settings-panel pa-0\\\" *ngIf=\\\"showSettings\\\">\\n  <mat-toolbar color=\\\"warn\\\">\\n    <span fxFlex>Options</span>\\n    <button mat-icon-button (click)=\\\"showSettings = false\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </mat-toolbar>\\n  <mat-card-content class=\\\"demo-checkbox pa-1\\\">\\n    <div class=\\\"pb-1\\\">\\n      <mat-checkbox [(ngModel)]=\\\"options.collapsed\\\" (change)=\\\"sendOptions()\\\" [labelPosition]=\\\"end\\\">Collapsed Sidebar</mat-checkbox>\\n    </div>\\n    <div class=\\\"pb-1\\\">\\n      <mat-checkbox [(ngModel)]=\\\"options.compact\\\" (change)=\\\"sendOptions()\\\" [labelPosition]=\\\"end\\\">Compact Sidebar</mat-checkbox>\\n    </div>\\n    <div class=\\\"pb-1\\\">\\n      <mat-checkbox [(ngModel)]=\\\"options.boxed\\\" (change)=\\\"sendOptions()\\\" [labelPosition]=\\\"end\\\">Boxed Layout</mat-checkbox>\\n    </div>\\n    <div class=\\\"pb-1\\\">\\n      <mat-checkbox [(ngModel)]=\\\"options.dark\\\" (change)=\\\"sendOptions()\\\" [labelPosition]=\\\"end\\\">Dark Mode</mat-checkbox>\\n    </div>\\n    <div class=\\\"pb-1\\\">\\n      <mat-checkbox (change)=\\\"options.dir = (options.dir == 'rtl' ? 'ltr' : 'rtl'); sendOptions()\\\" [labelPosition]=\\\"end\\\">RTL</mat-checkbox>\\n    </div>\\n    <div class=\\\"pb-0\\\">\\n      <mat-select placeholder=\\\"Language\\\" class=\\\"mt-1\\\" [(ngModel)]=\\\"currentLang\\\" #langSelect=\\\"ngModel\\\" (ngModelChange)=\\\"translate.use(currentLang)\\\">\\n        <mat-option *ngFor=\\\"let lang of translate.getLangs()\\\" [value]=\\\"lang\\\">{{ lang }}</mat-option>\\n      </mat-select>\\n    </div>\\n  </mat-card-content>\\n</mat-card>\\n<!-- /Demo Purposes Only -->\\n\"","import { Component, Output, EventEmitter } from '@angular/core';\n\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-options',\n  templateUrl: './options.component.html'\n})\nexport class OptionsComponent {\n  currentLang = 'en';\n  showSettings = false;\n  options = {\n    collapsed: false,\n    compact: false,\n    boxed: false,\n    dark: false,\n    dir: 'ltr'\n  };\n\n  @Output()\n  messageEvent = new EventEmitter<Object>();\n\n  constructor(public translate: TranslateService) {\n    const browserLang: string = translate.getBrowserLang();\n    translate.use(browserLang.match(/en|fr/) ? browserLang : 'en');\n  }\n\n  sendOptions() {\n    if (this.options.collapsed === true) {\n      this.options.compact = false;\n    }\n    if (this.options.compact === true) {\n      this.options.collapsed = false;\n    }\n    this.messageEvent.emit(this.options);\n  }\n}\n","module.exports = \"<app-menu></app-menu>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html'\n})\nexport class SidebarComponent {\n  constructor() {}\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DependentRoutingModule { }\n","import {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DependentRoutingModule } from './dependent-routing.module';\nimport { DetailComponent } from './detail/detail.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {FlexModule} from '@angular/flex-layout';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatLineModule} from '@angular/material/core';\nimport {MatDividerModule} from '@angular/material/divider';\n\n\n@NgModule({\n    declarations: [\n        DetailComponent\n    ],\n    exports: [\n        DetailComponent\n    ],\n    imports: [\n        CommonModule,\n        DependentRoutingModule,\n        MatCardModule,\n        FlexModule,\n        MatIconModule,\n        MatLineModule,\n        MatDividerModule\n    ],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class DependentModule { }\n","module.exports = \"<mat-card>\\n    <mat-card-header>\\n        <mat-card-title>Dependientes Economicos</mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n        <mat-list>\\n\\n            <mat-list-item *ngFor=\\\"let dependent of ObjDeps\\\">\\n                <div mat-line>Edad: {{dependent.age}}</div>\\n                <div mat-line>{{typeDependent[dependent.typeDependent]}} {{ typeOccupation[dependent.typeOccupation - 1]}}  </div>\\n                <mat-divider  ></mat-divider>\\n            </mat-list-item>\\n\\n        </mat-list>\\n    </mat-card-content>\\n</mat-card>\\n\\n\\n\\n\"","module.exports = \".mat-list-icon {\\n  color: rgba(0, 0, 0, 0.54); }\\n\\n.mat-divider {\\n  border-top-color: rgba(0, 0, 0, 0.35); }\\n\"","import { Component, OnInit } from '@angular/core';\nimport {RequestDetalleCredito} from '../../interfaces/request-detalle-credito';\nimport {ServicesDetalleCreditoService} from '../../services/services-detalle-credito.service';\nimport {Dependent} from '../../interfaces/dependent';\nexport interface Section {\n    name: string;\n    updated: Date;\n}\n\n\n@Component({\n  selector: 'app-dependent-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.scss']\n})\nexport class DetailComponent implements OnInit {\n    folders: Section[] = [\n        {\n            name: 'Photos',\n            updated: new Date('1/1/16'),\n        },\n        {\n            name: 'Recipes',\n            updated: new Date('1/17/16'),\n        },\n        {\n            name: 'Work',\n            updated: new Date('1/28/16'),\n        }\n    ];\n    notes: Section[] = [\n        {\n            name: 'Vacation Itinerary',\n            updated: new Date('2/20/16'),\n        },\n        {\n            name: 'Kitchen Remodel',\n            updated: new Date('1/18/16'),\n        }\n    ];\n\n    ObjDeps:Dependent[] = [];\n    typeDependent:String[] = [\"Esposo(a)\",\"Hijo(a)\",\"Primo(a)\",\"Tio(a)\",\"Otro (a)\"];\n    typeOccupation:String[] = [\"Ama(o) de casa\",\"Empleado(a)\", \"Estudiante\"];\n\n\n    constructor( private srvDetalle: ServicesDetalleCreditoService,) {\n        this.ObjDeps = srvDetalle.ObjDetalleCredito.dependents;\n\n    }\n\n  ngOnInit(): void {\n  }\n\n}\n","module.exports = \"<div class=\\\"header\\\">\\n  <h1 mat-dialog-title>{{ data.title }}</h1>\\n</div>\\n<div mat-dialog-content>\\n  <p class=\\\"dialog-message\\\">{{ data.message }}</p>\\n</div>\\n<div mat-dialog-actions>\\n  <button *ngIf=\\\"btnCancel\\\" mat-flat-button color=\\\"warn\\\" style=\\\"margin-right:10px;\\\" (click)=\\\"cancel()\\\">{{ data.cancelText }}</button>\\n  <button mat-flat-button color=\\\"primary\\\" (click)=\\\"confirm()\\\">{{ data.confirmText }}</button>\\n</div>\\n\"","module.exports = \".header, .dialog-message {\\n  text-transform: lowercase; }\\n\\n.header::first-letter, .dialog-message::first-letter {\\n  text-transform: uppercase; }\\n\\n.btn-cancel {\\n  background-color: red;\\n  color: #fff; }\\n\"","import {Component, HostListener, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\n\n@Component({\n    selector: 'app-dialog-alert',\n    templateUrl: './dialog-alert.component.html',\n    styleUrls: ['./dialog-alert.component.scss']\n})\nexport class DialogAlertComponent implements OnInit {\n    btnCancel=false;\n    constructor(@Inject(MAT_DIALOG_DATA) public data: {\n        cancelText: string,\n        confirmText: string,\n        message: string,\n        title: string\n    },private mdDialogRef: MatDialogRef<DialogAlertComponent>) {\n        if (data.cancelText != null){\n            this.btnCancel = true;\n        }\n    }\n\n    ngOnInit() {\n    }\n\n    public cancel() {\n        this.close(false);\n    }\n    public close(value) {\n        this.mdDialogRef.close(value);\n    }\n    public confirm() {\n        this.close(true);\n    }\n    @HostListener(\"keydown.esc\")\n    public onEsc() {\n        this.close(false);\n    }\n}\n","module.exports = \"<h1 mat-dialog-title>Detalle del credito</h1>\\n<div mat-dialog-content>\\n    <div class=\\\"container\\\">\\n        <div id=\\\"content\\\">\\n            <div id=\\\"main-content\\\">\\n                <mat-tab-group mat-align-tabs=\\\"start\\\">\\n                    <mat-tab label=\\\"Adicional\\\">\\n                        <app-additional-detail></app-additional-detail>\\n                    </mat-tab>\\n                    <mat-tab label=\\\"Dependientes economicos\\\">\\n                        <app-dependent-detail></app-dependent-detail>\\n                    </mat-tab>\\n                    <mat-tab label=\\\"Conyuge\\\">\\n                        <app-spouse-detail></app-spouse-detail>\\n                    </mat-tab>\\n                    <mat-tab label=\\\"Laborales\\\">\\n                        <app-work-detail></app-work-detail>\\n                    </mat-tab>\\n                    <mat-tab label=\\\"Referencia personales\\\">\\n                        <app-reference-detail></app-reference-detail>\\n                    </mat-tab>\\n                    <mat-tab label=\\\"Documentos\\\">\\n                        <app-document-detail></app-document-detail>\\n                    </mat-tab>\\n                </mat-tab-group>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-dialog-detail',\n  templateUrl: './dialog-detail.component.html',\n  styleUrls: ['./dialog-detail.component.scss']\n})\nexport class DialogDetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConfirmDialogService } from '../services/confirm-dialog.service';\nimport { LayerDocumentComponent  } from \"./layer-document/layer-document.component\";\nimport { LayerBiometricComponent } from './layer-biometric/layer-biometric.component';\nimport { LayerGovernmentComponent } from './layer-government/layer-government.component';\nimport { DialogDetailComponent } from \"./dialog-detail/dialog-detail.component\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {MatTabsModule} from \"@angular/material/tabs\";\nimport {AdditionalModule} from \"../additional/additional.module\";\nimport {DependentModule} from \"../dependent/dependent.module\";\nimport {SpouseModule} from \"../spouse/spouse.module\";\nimport {WorkModule} from \"../work/work.module\";\nimport {ReferenceModule} from \"../reference/reference.module\";\nimport {DocumentModule} from \"../document/document.module\";\nimport {ViewComponent} from \"./view/view.component\";\nimport {PdfComponent} from \"./pdf/pdf.component\";\nimport { DialogAlertComponent } from './dialog-alert/dialog-alert.component';\nimport {MatButtonModule} from \"@angular/material/button\";\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatTabsModule,\n    AdditionalModule,\n    DependentModule,\n    SpouseModule,\n    WorkModule,\n    ReferenceModule,\n    DocumentModule,\n    MatButtonModule\n  ],\n  exports:[\n    LayerDocumentComponent,\n    LayerBiometricComponent,\n    LayerGovernmentComponent,\n      ViewComponent,\n      PdfComponent\n\n  ],\n  entryComponents: [\n    LayerDocumentComponent,\n    LayerBiometricComponent,\n    LayerGovernmentComponent,\n    DialogDetailComponent,\n    ViewComponent,\n    PdfComponent,\n    DialogAlertComponent\n  ],\n  declarations: [\n      LayerDocumentComponent,\n    LayerBiometricComponent,\n    LayerGovernmentComponent,\n    DialogDetailComponent,\n    ViewComponent,\n    PdfComponent,\n    DialogAlertComponent\n  ],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n  providers: [ConfirmDialogService]\n})\nexport class DialogsModule { }\n","module.exports = \"<h1 mat-dialog-title>Capa de biometrica(facematch)</h1>\\n<div mat-dialog-content>\\n  <table id=\\\"j_idt164\\\" class=\\\"ui-panelgrid ui-widget\\\" role=\\\"grid\\\">\\n  <thead class=\\\"ui-panelgrid-header\\\">\\n  <tr class=\\\"ui-widget-header\\\" role=\\\"row\\\">\\n    <td colspan=\\\"2\\\" role=\\\"columnheader\\\" class=\\\"ui-panelgrid-cell ui-widget-header\\\">\\n        <span class=\\\"container\\\">\\n            <img id=\\\"ImgBiometric\\\" [src]=\\\"imageSource\\\" src=\\\"\\\" style=\\\"height: 240px;\\\">\\n        </span>\\n    </td>\\n  </tr>\\n  </thead>\\n  <tbody>\\n  <tr class=\\\"ui-widget-content\\\" role=\\\"row\\\">\\n    <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell label\\\">Rostro Detectado:</td>\\n    <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell value\\\">{{ this.biometric.estatus }}</td>\\n  </tr>\\n  <tr class=\\\"ui-widget-content\\\" role=\\\"row\\\">\\n    <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell label\\\">Verificación de rostro</td>\\n    <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell value\\\">{{  this.biometric.mensaje }}</td>\\n  </tr>\\n  <tr class=\\\"ui-widget-content\\\" role=\\\"row\\\">\\n    <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell label\\\">Coincidencia de rostro con identidad</td>\\n    <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell value\\\">{{  this.biometric.similitud }}%</td>\\n  </tr>\\n  <tr class=\\\"ui-widget-content\\\" role=\\\"row\\\">\\n    <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell label\\\">Duplicación</td>\\n    <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell value\\\">No aplica</td>\\n  </tr>\\n  <tr class=\\\"ui-widget-content\\\" role=\\\"row\\\">\\n    <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell label\\\">Folios Duplicados</td>\\n    <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell value\\\">No aplica</td>\\n  </tr>\\n  <tr class=\\\"ui-widget-content\\\" role=\\\"row\\\">\\n    <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell label\\\">Deduplicación</td>\\n    <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell value\\\">No aplica</td>\\n  </tr>\\n  </tbody>\\n</table>\\n</div>\\n\"","module.exports = \".container {\\n  position: relative;\\n  width: 100%;\\n  padding-top: 66.66%;\\n  /* 3:2 Aspect Ratio */ }\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {IObjRequest} from \"../../interfaces/iobj-request\";\nimport {image} from \"../../core/image\";\nimport {environment} from \"../../../environments/environment\";\n\n@Component({\n    selector: 'app-layer-biometric',\n    templateUrl: './layer-biometric.component.html',\n    styleUrls: ['./layer-biometric.component.scss']\n})\nexport class LayerBiometricComponent implements OnInit {\n    creditId:any;\n    imageSource: any;\n    ObjData: any;\n    biometric = {\n        estatus: \"\",\n        mensaje: \"\",\n        similitud: \"\"\n    }\n    constructor(\n        private httpClient: HttpClient,\n        private sanitizer: DomSanitizer,\n        private dialogRef: MatDialogRef<LayerBiometricComponent>,\n        @Inject(MAT_DIALOG_DATA) data:any) {\n        this.creditId = data.model.dataModal;\n    }\n\n    ngOnInit() {\n        this.imageSource = this.sanitizer.bypassSecurityTrustResourceUrl(`data:image/png;base64, ${image}`);\n\n        this.httpClient.get<IObjRequest>(environment.apiUrl+\"/forms/download/\"+this.creditId+\"/3\").subscribe(\n            (result) => {\n                if(result.data != null){\n                    this.imageSource = this.sanitizer.bypassSecurityTrustResourceUrl(`data:image/png;base64, ${result.data}`);\n                }\n            },\n            (error) => {\n                console.log(<any>error);\n            }\n        );\n\n        this.httpClient.get<IObjRequest>(environment.apiUrl+\"/forms/transaction/\"+this.creditId+\"/2\").subscribe(\n            (result) => {\n                if (result.data != null) {\n                    this.biometric.estatus = (result.data.estatus == 'OK')? 'SI': 'NO';\n                    if (result.data.estatus == 'OK') {\n                        this.biometric.mensaje = result.data.mensaje;\n                        this.biometric.similitud = result.data.similitud.toFixed(2);\n                    } else {\n                        this.biometric.mensaje = result.data.mensaje;\n                        this.biometric.similitud = \"<80\";\n                    }\n                } else {\n                    this.biometric.estatus = \"No se identifico el documento\";\n                    this.biometric.mensaje = \"No se identifico el documento\";\n                    this.biometric.similitud = \"No se identifico el documento\";\n                }\n            },\n            (error) => {\n                this.biometric.estatus = \"No se identifico el documento\";\n                this.biometric.mensaje = \"No se identifico el documento\";\n                this.biometric.similitud = \"No se identifico el documento\";\n            }\n        );\n\n\n\n    }\n\n}\n","module.exports = \"<h1 mat-dialog-title>Capa de documento</h1>\\n<div mat-dialog-content>\\n    <table id=\\\"j_idt138\\\" class=\\\"ui-panelgrid ui-widget\\\" role=\\\"grid\\\">\\n    <thead class=\\\"ui-panelgrid-header\\\">\\n        <tr class=\\\"ui-widget-header\\\" role=\\\"row\\\">\\n            <td colspan=\\\"2\\\" role=\\\"columnheader\\\" class=\\\"ui-panelgrid-cell ui-widget-header\\\">\\n                <span class=\\\"container\\\">\\n                    <img id=\\\"ImgAnverso\\\" [src]=\\\"imageAnverso\\\" src=\\\"\\\" style=\\\"height: 240px;\\\">\\n                </span>\\n                <span style=\\\"width: 15px\\\">&nbsp;</span>\\n                <span class=\\\"container\\\">\\n                    <img id=\\\"ImgReverso\\\" [src]=\\\"imageReverso\\\" src=\\\"\\\" style=\\\"height: 240px;\\\">\\n                </span>\\n            </td>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr class=\\\"ui-widget-content\\\" role=\\\"row\\\">\\n            <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell label\\\">MRZ</td>\\n            <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell value\\\">{{ this.ine.mrz }}</td>\\n        </tr>\\n        <tr class=\\\"ui-widget-content\\\" role=\\\"row\\\">\\n            <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell label\\\">MRZ Valido</td>\\n            <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell value\\\">{{ this.ine.valido }}</td>\\n        </tr>\\n        <tr class=\\\"ui-widget-content\\\" role=\\\"row\\\">\\n            <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell label\\\">Plantilla Coincidente Encontrada</td>\\n            <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell value\\\">NO APLICA</td>\\n        </tr>\\n        <tr class=\\\"ui-widget-content\\\" role=\\\"row\\\">\\n            <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell label\\\">Suficientes Características Encontradas</td>\\n            <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell value\\\">NO APLICA</td>\\n        </tr>\\n        <tr class=\\\"ui-widget-content\\\" role=\\\"row\\\">\\n            <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell label\\\">Suficientes Características Frotales Encontradas</td>\\n            <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell value\\\">NO APLICA</td>\\n        </tr>\\n        <tr class=\\\"ui-widget-content\\\" role=\\\"row\\\">\\n            <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell label\\\">Suficientes Características Reversas Encontradas</td>\\n            <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell value\\\">NO APLICA</td>\\n        </tr>\\n        <tr class=\\\"ui-widget-content\\\" role=\\\"row\\\">\\n            <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell label\\\">Vigencia Documento</td>\\n            <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell value\\\">{{ this.ine.vigencia }}</td>\\n        </tr>\\n        <tr class=\\\"ui-widget-content\\\" role=\\\"row\\\">\\n            <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell label\\\">Baja Resolución Documento</td>\\n            <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell value\\\">NO APLICA</td>\\n        </tr>\\n    </tbody>\\n</table>\\n</div>\\n\"","module.exports = \".container {\\n  position: relative;\\n  width: 100%;\\n  padding-top: 66.66%;\\n  /* 3:2 Aspect Ratio */ }\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {IObjRequest} from \"../../interfaces/iobj-request\";\nimport {image} from \"../../core/image\";\nimport {environment} from \"../../../environments/environment\";\n\n@Component({\n    selector: 'app-layer-document',\n    templateUrl: './layer-document.component.html',\n    styleUrls: ['./layer-document.component.scss']\n})\nexport class LayerDocumentComponent implements OnInit {\n    creditId:any;\n    imageAnverso: any;\n    imageReverso: any;\n    ObjData: any;\n    ine = {\n        mrz: \"\",\n        valido: \"\",\n        vigencia: \"\"\n    }\n    constructor(\n        private httpClient: HttpClient,\n        private sanitizer: DomSanitizer,\n        private dialogRef: MatDialogRef<LayerDocumentComponent>,\n        @Inject(MAT_DIALOG_DATA) data:any) {\n        this.creditId = data.model.dataModal;\n    }\n\n    ngOnInit() {\n        this.httpClient.get<IObjRequest>(environment.apiUrl+\"/forms/download/\"+this.creditId+\"/1\").subscribe(\n            (result) => {\n                if(result.data != null){\n                    this.imageAnverso = this.sanitizer.bypassSecurityTrustResourceUrl(`data:image/png;base64, ${result.data}`);\n                }\n            },\n            (error) => {\n                console.log(<any>error);\n            }\n        );\n        this.httpClient.get<IObjRequest>(environment.apiUrl+\"/forms/download/\"+this.creditId+\"/2\").subscribe(\n            (result) => {\n                if(result.data != null){\n                    this.imageReverso = this.sanitizer.bypassSecurityTrustResourceUrl(`data:image/png;base64, ${result.data}`);\n                }\n            },\n            (error) => {\n                console.log(<any>error);\n            }\n        );\n        this.httpClient.get<IObjRequest>(environment.apiUrl+\"/forms/transaction/\"+this.creditId+\"/1\").subscribe(\n            (result) => {\n\n                if (result.data != null) {\n                    this.ObjData = result.data;\n\n                    if (this.ObjData.hasOwnProperty(\"estatus\")) {\n                        this.ine.mrz = this.ObjData.mensaje;\n                        this.ine.valido = this.ObjData.mensaje;\n                        this.ine.vigencia = this.ObjData.mensaje;\n                    } else {\n                        this.ine.mrz = this.ObjData.codigoBarras;\n                        if (this.ObjData.hasOwnProperty(\"validacionMRZ\")) {\n                            this.ine.valido = (this.ObjData.validacionMRZ.vigencia == 'OK') ? 'SI' : 'NO';\n                        }\n                        this.ine.vigencia = this.ObjData.vigencia;\n                    }\n                } else {\n                    this.ine.mrz = \"No se identifico el documento\";\n                    this.ine.valido = \"No se identifico el documento\";\n                    this.ine.vigencia = \"No se identifico el documento\";\n                }\n\n            },\n            (error) => {\n                this.ine.mrz = \"No se identifico el documento\";\n                this.ine.valido = \"No se identifico el documento\";\n                this.ine.vigencia = \"No se identifico el documento\";\n            }\n        );\n        this.imageAnverso = this.sanitizer.bypassSecurityTrustResourceUrl(`data:image/png;base64, ${image}`);\n        this.imageReverso = this.sanitizer.bypassSecurityTrustResourceUrl(`data:image/png;base64, ${image}`);\n\n    }\n\n}\n","module.exports = \"<h1 mat-dialog-title>Capa de gobierno</h1>\\n<div mat-dialog-content>\\n  <table class=\\\"ui-panelgrid ui-widget\\\" role=\\\"grid\\\">\\n    <thead class=\\\"ui-panelgrid-header\\\">\\n      <tr class=\\\"ui-widget-header\\\" role=\\\"row\\\">\\n        <td colspan=\\\"2\\\" role=\\\"columnheader\\\" class=\\\"ui-panelgrid-cell ui-widget-header\\\">\\n          <span class=\\\"container\\\">\\n            <img id=\\\"ImgGov\\\" [src]=\\\"imageSource\\\" style=\\\"height: 240px;\\\" src=\\\"\\\">\\n          </span>\\n        </td>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr class=\\\"ui-widget-content\\\" role=\\\"row\\\">\\n        <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell label\\\">CURP Valido</td>\\n        <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell value\\\">{{ (this.ObjData.estatus == 'OK') ? 'SI' : 'NO' }} </td>\\n      </tr>\\n      <tr class=\\\"ui-widget-content\\\" role=\\\"row\\\">\\n        <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell label\\\">Coincidencia CURP Con Datos Identidad</td>\\n        <td role=\\\"gridcell\\\" class=\\\"ui-panelgrid-cell value\\\">{{ (this.ObjData.estatus == 'OK') ? 'SI' : 'NO' }}</td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\"","module.exports = \".container {\\n  position: relative;\\n  width: 100%;\\n  padding-top: 66.66%;\\n  /* 3:2 Aspect Ratio */ }\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {IObjRequest} from \"../../interfaces/iobj-request\";\nimport {image} from \"../../core/image\";\nimport {environment} from \"../../../environments/environment\";\n\n@Component({\n    selector: 'app-layer-government',\n    templateUrl: './layer-government.component.html',\n    styleUrls: ['./layer-government.component.scss']\n})\nexport class LayerGovernmentComponent implements OnInit {\n    creditId:any;\n    imageSource: any;\n    ObjData: any;\n    constructor(\n        private httpClient: HttpClient,\n        private sanitizer: DomSanitizer,\n        private dialogRef: MatDialogRef<LayerGovernmentComponent>,\n        @Inject(MAT_DIALOG_DATA) data:any) {\n        this.creditId = data.model.dataModal;\n    }\n\n    ngOnInit() {\n        this.httpClient.get<IObjRequest>(environment.apiUrl+\"/forms/download/\"+this.creditId+\"/4\").subscribe(\n            (result) => {\n                if(result.data != null){\n                    this.imageSource = this.sanitizer.bypassSecurityTrustResourceUrl(`data:image/png;base64, ${result.data}`);\n                }\n            },\n            (error) => {\n                console.log(<any>error);\n            }\n        );\n        this.httpClient.get<IObjRequest>(environment.apiUrl+\"/forms/transaction/\"+this.creditId+\"/3\").subscribe(\n            (result) => {\n\n                this.ObjData = result.data;\n                console.log(this.ObjData.estatus);\n\n            },\n            (error) => {\n                console.log(<any>error);\n            }\n        );\n        this.imageSource = this.sanitizer.bypassSecurityTrustResourceUrl(`data:image/png;base64, ${image}`);\n    }\n\n}\n","module.exports = \"<iframe #ifrm [id]=\\\"ifrm\\\" id=\\\"ifrm\\\" name=\\\"ifrm\\\"  style=\\\"width: 500px; height: 400px;\\\"></iframe>\\n\"","module.exports = \"\"","import {Component, ElementRef, Inject, Input, OnInit, ViewChild} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { image } from '../view/image';\nimport { pdf } from '../view/pdf';\nimport {MAT_DIALOG_DATA, MatDialogConfig, MatDialogRef} from '@angular/material/dialog';\nimport {DialogDetailComponent} from '../dialog-detail/dialog-detail.component';\nimport {IObjRequest} from '../../interfaces/iobj-request';\nimport {HttpClient} from '@angular/common/http';\nimport {toBase64String} from '@angular/compiler/src/output/source_map';\nimport {DOCUMENT} from '@angular/common';\n\n\n@Component({\n    selector: 'app-pdf',\n    templateUrl: './pdf.component.html',\n    styleUrls: ['./pdf.component.scss']\n})\nexport class PdfComponent implements OnInit {\n    @Input() idDocument = '';\n    @ViewChild('iframe') iframe!: ElementRef;\n\n    IdDocument: number;\n    imageSource: any;\n    constructor(\n        private httpClient: HttpClient,\n        private sanitizer: DomSanitizer,\n        private dialogRef: MatDialogRef<PdfComponent>,\n        @Inject(DOCUMENT) document:any,\n        @Inject(MAT_DIALOG_DATA) data:any) {\n        console.log(data.model.dataModal);\n        this.IdDocument = data.model.dataModal;\n    }\n\n    ngOnInit() {\n        /*this.httpClient.get<IObjRequest>(\"/forms/download/\"+this.IdDocument).subscribe(\n            (result) => {\n                if(result.data != null){\n                    const Base64String = `${result.data}`;\n                    const byteArray = new Uint8Array(atob(Base64String).split('').map(char => char.charCodeAt(0)));\n                    const blob = new Blob([byteArray], {type: 'application/pdf'});\n                    const url = window.URL.createObjectURL(blob);\n\n                    // i.e. display the PDF content via iframe\n                    let iframe = this.iframe.nativeElement\n                    iframe.src = url;\n                }\n            },\n            (error) => {\n                console.log(<any>error);\n            }\n        );*/\n\n        let PathReportString = 'data:application/pdf;base64,' + (this.sanitizer.bypassSecurityTrustResourceUrl(pdf) as any).changingThisBreaksApplicationSecurity;\n\n        document.getElementById('ifrm').setAttribute(\"src\", PathReportString);\n\n    }\n\n\n   /* fetch(fileUploaded.content)\n.then(response => {\n    // response.data -> response data base64 encoded\n    // decoding the data via atob()\n    const byteArray = new Uint8Array(atob(response.data).split('').map(char => char.charCodeAt(0)));\n    return new Blob([byteArray], {type: 'application/pdf'});\n})\n.then(blob => {\n    // Here is your URL you can use\n    const url = window.URL.createObjectURL(blob);\n\n    // i.e. display the PDF content via iframe\n    document.querySelector(\"iframe\").src = url;\n});*/\n}\n","export const image = '';\n","export const pdf = '';\n","module.exports = \"<h1 mat-dialog-title>Documentación</h1>\\n<div mat-dialog-content>\\n    <img [src]=\\\"imageSource\\\" alt=\\\"Image Source\\\" class=\\\"responsive\\\">\\n</div>\\n\"","module.exports = \".responsive {\\n  width: 100%;\\n  height: auto; }\\n\"","import {Component, Inject, Input, OnInit} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { image } from './image';\nimport {MAT_DIALOG_DATA, MatDialogConfig, MatDialogRef} from '@angular/material/dialog';\nimport {DialogDetailComponent} from '../dialog-detail/dialog-detail.component';\nimport {IObjRequest} from '../../interfaces/iobj-request';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from \"../../../environments/environment\";\n\n\nexport interface Imodel{ dataModal: number; }\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.scss']\n})\nexport class ViewComponent implements OnInit {\n    @Input() idDocument = '';\n    IdDocument: number;\n    imageSource: any;\n\n    constructor(\n        private httpClient: HttpClient,\n        private sanitizer: DomSanitizer,\n        private dialogRef: MatDialogRef<ViewComponent>,\n        @Inject(MAT_DIALOG_DATA) data:any) {\n        console.log(data.model.dataModal);\n        this.IdDocument = data.model.dataModal;\n    }\n\n    ngOnInit () {\n        this.httpClient.get<IObjRequest>(environment.apiUrl+\"/forms/download/\"+this.IdDocument).subscribe(\n            (result) => {\n                if(result.data != null){\n                    this.imageSource = this.sanitizer.bypassSecurityTrustResourceUrl(`data:image/png;base64, ${result.data}`);\n                }\n            },\n            (error) => {\n                console.log(<any>error);\n            }\n        );\n        this.imageSource = this.sanitizer.bypassSecurityTrustResourceUrl(`data:image/png;base64, ${image}`);\n    }\n\n\n        //href=\"https://pimaid.dev:8443/CreditoParaTi/forms/download/{{ document.idDocument }}\"\n\n}\n","module.exports = \"<mat-card>\\n    <mat-card-header>\\n        <mat-card-title>Documentos recibidos</mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n        <mat-list>\\n            <div mat-subheader>Documentos</div>\\n            <mat-list-item *ngFor=\\\"let document of Docs\\\">\\n                <div mat-line>\\n\\n                    <a *ngIf=\\\"document.typeDocumentId < 10\\\" (click)=\\\"download(document.idDocument)\\\" >\\n                        {{ typeDocument[document.typeDocumentId-1] }}\\n                    </a>\\n\\n                    <a *ngIf=\\\"document.typeDocumentId == 10\\\" (click)=\\\"downloadPdf(document.idDocument)\\\" >\\n                        {{ typeDocument[document.typeDocumentId-1] }}\\n                    </a>\\n\\n                    <a *ngIf=\\\"document.typeDocumentId == 11\\\" (click)=\\\"downloadPdf(document.idDocument)\\\" >\\n                        {{ typeDocument[document.typeDocumentId-1] }}\\n                    </a>\\n\\n                    <a *ngIf=\\\"document.typeDocumentId > 11\\\" (click)=\\\"download(document.idDocument)\\\" >\\n                        {{ typeDocument[document.typeDocumentId-1] }}\\n                    </a>\\n                </div>\\n            </mat-list-item>\\n        </mat-list>\\n    </mat-card-content>\\n</mat-card>\\n\"","module.exports = \".mat-list-icon {\\n  color: rgba(0, 0, 0, 0.54); }\\n\"","import { Component, OnInit } from '@angular/core';\nimport {RequestDetalleCredito} from '../../interfaces/request-detalle-credito';\nimport {ServicesDetalleCreditoService} from '../../services/services-detalle-credito.service';\nimport {IDocument} from '../../interfaces/document';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {DialogDetailComponent} from '../../dialogs/dialog-detail/dialog-detail.component';\nimport { ViewComponent } from '../../dialogs/view/view.component';\nimport { PdfComponent} from '../../dialogs/pdf/pdf.component';\n\n@Component({\n    selector: 'app-document-detail',\n    templateUrl: './detail.component.html',\n    styleUrls: ['./detail.component.scss']\n})\nexport class DetailComponent implements OnInit {\n    Docs:IDocument[] = [];\n    typeDocument:String[] = [\n        \"CREDENCIAL DE ELECTOR ANVERSO\",\n        \"CREDENCIAL DE ELECTOR REVERSO\",\n        \"SELFIE\",\n        \"CURP\",\n        \"COMPROBANTE DE DOMICILIO\",\n        \"COMPROBANTE DE INGRESOS\",\n        \"CARTA DE CONSENTIMIENTO\",\n        \"ACTA DE MATRIMONIO\",\n        \"SOLICITUD DE CREDITO\",\n        \"EXPENDIENTE DE FOVISSSTE\",\n        \"SALDO SUBCUENTA DE VIVIENDA\",\n        \"CREDENCIAL DE ELECTOR ANVERSO CONYUGE\",\n        \"CREDENCIAL DE ELECTOR REVERSO CONYUGE\",\n        \"SELFIE COYUGE\",\n        \"CREDENCIAL DE ELECTOR ANVERSO CO-ACREDITADO\",\n        \"CURP CO-ACREDITADO\",\n        \"COMPROBANTE DE DOMICILIO CO-ACREDITADO\",\n        \"COMPROBANTE DE INGRESOS CO-ACREDITADO\",\n        \"ESTADO DE CUENTA BANCARIO CO-ACREDITADO\",\n        \"ACTA DE MATRIMONIO CO-ACREDITADO\",\n        \"ACTA DE NACIMIENTO CO-ACREDITADO\"\n    ];\n    constructor( private srvDetalle: ServicesDetalleCreditoService,\n                 public dialog: MatDialog) {\n        this.Docs = srvDetalle.ObjDetalleCredito.documents;\n    }\n\n    ngOnInit(): void {\n    }\n\n    download(IdDocument: number){\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.autoFocus = false;\n        dialogConfig.disableClose = false;\n        dialogConfig.data = {\n            idDocument: IdDocument\n        };\n        this.dialog.open(ViewComponent, {data: {\n                model:{dataModal: IdDocument} }\n        });\n    }\n\n    downloadPdf(IdDocument: number){\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.autoFocus = false;\n        dialogConfig.disableClose = false;\n        dialogConfig.data = {\n            idDocument: IdDocument\n        };\n        this.dialog.open(PdfComponent, {data: {\n                model:{dataModal: IdDocument} }\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DocumentRoutingModule { }\n","import {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DocumentRoutingModule } from './document-routing.module';\nimport { DetailComponent } from './detail/detail.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatLineModule} from '@angular/material/core';\nimport {MatListModule} from \"@angular/material/list\";\n\n\n@NgModule({\n    declarations: [\n        DetailComponent,\n\n    ],\n    exports: [\n        DetailComponent\n    ],\n    imports: [\n        CommonModule,\n        DocumentRoutingModule,\n        MatIconModule,\n        MatCardModule,\n        MatLineModule,\n        MatListModule\n    ],\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class DocumentModule { }\n","module.exports = \"<div class=\\\"login-body\\\">\\n    <div class=\\\"login-panel ui-fluid\\\">\\n        <div class=\\\"ui-g\\\">\\n            <div class=\\\"ui-g-12 logo-container\\\">\\n                <img src=\\\"assets/images/pimalogo.png\\\"/>\\n                <h1>Cambiar contraseña</h1>\\n            </div>\\n            <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\">\\n                <mat-form-field fxFlex=\\\"100\\\"  fxFlex.sm=\\\"100\\\">\\n                    <mat-label>Contraseña</mat-label>\\n                    <input matInput type=\\\"password\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Contraseña\\\">\\n                </mat-form-field>\\n                <mat-form-field fxFlex=\\\"100\\\"  fxFlex.sm=\\\"100\\\">\\n                    <mat-label>Confirmación de contraseña</mat-label>\\n                    <input matInput  type=\\\"password\\\" [(ngModel)]=\\\"confirme_password\\\" placeholder=\\\"Confirme de contraseña\\\">\\n                </mat-form-field>\\n            </div>\\n            <div fxLayout=\\\"row\\\" fxFlex=\\\"100\\\" >\\n                <button mat-raised-button (click)=\\\"changePassword()\\\" color=\\\"primary\\\" fxFill fxFlexFill>Cambiar contraseña</button>\\n            </div>\\n            <div fxLayout=\\\"row\\\"  fxFlex=\\\"100\\\" fxLayoutAlign=\\\"end\\\">\\n                <span><a (click)=\\\"home()\\\">Ir a inicio</a></span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ConfirmDialogService} from \"../../../services/confirm-dialog.service\";\nimport {Router} from \"@angular/router\";\nimport {IObjRequest} from \"../../../interfaces/iobj-request\";\nimport {environment} from \"../../../../environments/environment\";\nimport {AuthService} from \"../../../services/auth.service\";\n\n@Component({\n    selector: 'app-change-password',\n    templateUrl: './change-password.component.html',\n    styleUrls: ['./change-password.component.scss']\n})\nexport class ChangePasswordComponent implements OnInit {\n    loading = true;\n    password: \"\";\n    confirme_password:\"\";\n    userId: any;\n    userCurrent:any;\n    user = {\n        email: ''\n    }\n    options = {\n        title: 'ATENCION',\n        message: '',\n        cancelText: null,\n        confirmText: 'CERRAR'\n    };\n\n    constructor(private httpClient: HttpClient,\n                private dialogConfirm: ConfirmDialogService,\n                private authUser:AuthService,\n                private router: Router) {\n        this.userCurrent = JSON.parse(JSON.parse(this.authUser.getCurrentUser())) ;\n    }\n\n    ngOnInit() {\n        this.userCurrent = JSON.parse(JSON.parse(this.authUser.getCurrentUser())) ;\n    }\n\n    home() {\n        this.router.navigate(['/']);\n    }\n\n    changePassword(){\n        const passwordExp = /^(?=(?:.*\\d){1})(?=(?:.*[A-Z]){1})(?=(?:.*[a-z]){1})\\S{8,}$/;\n        if (this.password != this.confirme_password) {\n            this.options.message = \"Su contraseña y su confirmación no son iguales\";\n            this.dialogConfirm.open(this.options);\n            return false;\n        }\n        if (!passwordExp.test(this.password)) {\n            this.options.message = \"Su contreseña debe tener por lo menos una mayuscula, un número y 8 caracteres con minimo\";\n            this.dialogConfirm.open(this.options);\n            return false;\n        }\n        let ObjUser = {\n            password: this.password\n        };\n        this.loading = false;\n        this.httpClient.put<IObjRequest>(environment.apiUrl+'/forms/employee/'+this.userCurrent.idUser,ObjUser).subscribe(\n            (response) => {\n                if(response.result){\n                    this.loading = false;\n                    this.router.navigate(['/']);\n                } else {\n                    this.options.message = response.message;\n                    this.dialogConfirm.open(this.options);\n                    this.loading = true;\n                }\n            },\n            (error) => {\n                this.options.message = \"Error en el cambio de contraseña\";\n                this.dialogConfirm.open(this.options);\n                this.loading = true;\n            }\n        );\n    }\n}\n","module.exports = \"<div class=\\\"login-body\\\">\\n    <div class=\\\"login-panel ui-fluid\\\">\\n        <div class=\\\"ui-g\\\">\\n            <div class=\\\"ui-g-12 logo-container\\\">\\n                <img src=\\\"assets/images/pimalogo.png\\\"/>\\n                <h1>Recuperar contraseña</h1>\\n            </div>\\n\\n            <div fxLayout=\\\"row\\\" fxFlex=\\\"100\\\">\\n                <mat-form-field fxFlex=\\\"100\\\"  appearance=\\\"outline\\\">\\n                    <mat-label>Ingrese el correo electrónico registrado</mat-label>\\n                    <input matInput [(ngModel)]=\\\"user.email\\\" fxFlex=\\\"100\\\" />\\n                </mat-form-field>\\n            </div>\\n            <div fxLayout=\\\"row\\\" fxFlex=\\\"100\\\" >\\n                <button mat-raised-button (click)=\\\"sendEmail()\\\" color=\\\"primary\\\" fxFill fxFlexFill>Enviar correo</button>\\n            </div>\\n            <div fxLayout=\\\"row\\\"  fxFlex=\\\"100\\\" fxLayoutAlign=\\\"end\\\">\\n                <span><a (click)=\\\"home()\\\">Ir a inicio</a></span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {User} from \"../../../interfaces/user\";\nimport {IObjRequest} from \"../../../interfaces/iobj-request\";\nimport {environment} from \"../../../../environments/environment\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {ConfirmDialogService} from \"../../../services/confirm-dialog.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n    selector: 'app-restorepassword',\n    templateUrl: './restorepassword.component.html',\n    styleUrls: ['./restorepassword.component.scss']\n})\nexport class RestorepasswordComponent implements OnInit {\n\n    user = {\n        email:''\n    }\n    options = {\n        title: 'ATENCION',\n        message: '',\n        cancelText: null,\n        confirmText: 'CERRAR'\n    };\n\n    constructor(private httpClient:HttpClient,\n                private dialogConfirm:ConfirmDialogService,\n                private router:Router) { }\n\n    ngOnInit() {\n    }\n\n    sendEmail(){\n        let ObjUser = {\n            username:'',\n            password:'',\n            email:this.user.email,\n        };\n\n        this.httpClient.post<IObjRequest>(environment.apiUrl+'/user/user/restorepassword',ObjUser).subscribe(\n            (response) => {\n                if(response.result){\n\n                    this.options.message = \"Se ha enviado un correo electrónico con su nueva contraseña\";\n                    this.dialogConfirm.open(this.options);\n                    this.dialogConfirm.confirmed().subscribe(confirmed => {\n                        if (confirmed) {\n                            this.router.navigate(['/']);\n                        }\n                    });\n                } else {\n                    this.options.message = response.message;\n                    this.dialogConfirm.open(this.options);\n\n                }\n            },\n            (error) => {\n                this.options.message = \"Error en el registro del usuario\";\n                this.dialogConfirm.open(this.options);\n\n            }\n        );\n    }\n\n    home(){\n        this.router.navigate(['/']);\n    }\n}\n","module.exports = \"<mat-card>\\n    <mat-card-header>\\n        <mat-card-title>Referencias personales</mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n        <mat-list>\\n\\n            <mat-list-item *ngFor=\\\"let referencias of ObjRef\\\">\\n                <div mat-line><strong>REFERENCIA {{ typeReference[referencias.typeReference] }}</strong></div>\\n                <div mat-line><strong>{{referencias.name }} {{referencias.paternalLastName}} {{referencias.maternalLastName}}</strong> </div>\\n                <div mat-subline>{{referencias.email}} </div>\\n                <div mat-subline>{{referencias.phone }}</div>\\n                <div mat-subline>{{referencias.mobile }}  </div>\\n            </mat-list-item>\\n        </mat-list>\\n    </mat-card-content>\\n</mat-card>\\n\\n\\n\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {Section} from '../../dependent/detail/detail.component';\nimport {ServicesDetalleCreditoService} from '../../services/services-detalle-credito.service';\nimport {References} from '../../interfaces/references';\n\nexport interface SSection {\n    name: string;\n    updated: Date;\n}\n\n\n@Component({\n    selector: 'app-reference-detail',\n    templateUrl: './detail.component.html',\n    styleUrls: ['./detail.component.scss']\n})\nexport class DetailComponent implements OnInit {\n    ObjRef:References[] = [];\n    typeReference:String[] = [\"FAMILIAR\",\"NO FAMILIAR\"];\n    constructor( private srvDetalle: ServicesDetalleCreditoService,) {\n        this.ObjRef =  srvDetalle.ObjDetalleCredito.references;\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ReferenceRoutingModule { }\n","import {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ReferenceRoutingModule } from './reference-routing.module';\nimport { DetailComponent } from './detail/detail.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatLineModule} from '@angular/material/core';\n\n\n@NgModule({\n    declarations: [\n        DetailComponent\n    ],\n    exports: [\n        DetailComponent\n    ],\n    imports: [\n        CommonModule,\n        ReferenceRoutingModule,\n        MatCardModule,\n        MatLineModule\n    ],\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\n})\nexport class ReferenceModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders} from \"@angular/common/http\";\nimport { Observable } from \"rxjs/internal/Observable\";\nimport { map } from \"rxjs/operators\";\nimport { isNullOrUndefined} from \"util\";\nimport {environment} from \"../../environments/environment\";\nimport {AuthUser} from \"../interfaces/auth\";\n\n\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    public UserAuth:AuthUser = {\n        idUser:\"\",\n        name: \"\",\n        paternalLastName: \"\",\n        motherLastName:  \"\",\n        email: \"\",\n        profileId: 0,\n    };\n\n    private  headers: HttpHeaders = new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n    })\n\n    constructor(private  http: HttpClient) { }\n\n    registerUser(username: string, email:string, password: string, profile: string): Observable<any> {\n        const url_api = \"http://localhost:3000/api/users\";\n        return this.http.post (url_api,{\n            username: username, email: email, profile: profile\n        },{\n            headers: this.headers\n        })\n        .pipe(map(data => data));\n    }\n\n    loginUser (username:string , password: string): Observable<any> {\n        const url_api = environment.apiUrl;\n        return this.http.post(url_api+\"/user/user/login\",{ username: username, password: password},{\n            headers: this.headers\n        }).pipe(\n            map(data => data)\n        );\n    }\n\n    setUser(user):void{\n        let user_string = JSON.stringify(user);\n        localStorage.setItem(\"currentUser\",user_string);\n    }\n\n    setToken(token):void{\n        localStorage.setItem(\"accessToken\",token);\n    }\n\n    getToken(){\n        return localStorage.getItem(\"accessToken\");\n    }\n\n    getCurrentUser(){\n        let user_string = localStorage.getItem(\"currentUser\");\n        if (!isNullOrUndefined(user_string)){\n            let user = JSON.stringify(user_string);\n            return user\n        } else {\n            return null\n        }\n    }\n\n    logoutUser() {\n        localStorage.removeItem(\"accessToken\");\n        localStorage.removeItem(\"currentUser\");\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { DialogAlertComponent } from '../dialogs/dialog-alert/dialog-alert.component';\nimport {MatDialog, MatDialogRef} from \"@angular/material/dialog\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmDialogService {\n  dialogRef: MatDialogRef<DialogAlertComponent>;\n  constructor(private dialog: MatDialog) { }\n\n  public open(options) {\n    this.dialogRef = this.dialog.open(DialogAlertComponent, {\n      data: {\n        title: options.title,\n        message: options.message,\n        cancelText: options.cancelText,\n        confirmText: options.confirmText\n      }\n    });\n  }\n\n  public confirmed(): Observable<any> {\n    return this.dialogRef.afterClosed().pipe(take(1), map(res => {\n          return res;\n        }\n    ));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {RequestDetalleCredito} from '../interfaces/request-detalle-credito';\nimport {DetalleCredito} from '../interfaces/detalle-credito';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ServicesDetalleCreditoService {\n    public ObjDetalleCredito: DetalleCredito = {} as DetalleCredito;\n    constructor() { }\n}\n","module.exports = \".center {\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    -webkit-transform: translateX(-50%) translateY(-50%);\\n    transform: translateX(-50%) translateY(-50%);\\n}\\n\\n.overlay{\\n    height:100vh;\\n    width:100%;\\n    background-color:rgba(0, 0, 0, 0.286);\\n    z-index:    10;\\n    top:        0;\\n    left:       0;\\n    position:   fixed;\\n}\\n\"","module.exports = \"<div class=\\\"overlay\\\">\\n    <div class=\\\"center\\\">\\n        <mat-progress-spinner diameter=150 mode=\\\"indeterminate\\\" color=\\\"primary\\\">\\n        </mat-progress-spinner>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.css']\n})\nexport class LoadingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {LoadingComponent} from \"./loading/loading.component\";\nimport {MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatProgressSpinnerModule\n  ],\n  exports:[\n      LoadingComponent\n  ],\n  declarations: [\n    LoadingComponent,\n  ],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n})\nexport class ShareModule { }\n","module.exports = \"<mat-card>\\n    <mat-card-header>\\n        <mat-card-title>Detalle de conyuge</mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"16px\\\">\\n            <div fxFlex=\\\"50\\\">\\n                <mat-label>Apellido paterno:</mat-label>\\n                <p><strong>{{ ObjSpouse.paternalLastName}}</strong></p>\\n            </div>\\n            <div fxFlex=\\\"50\\\">\\n                <mat-label>Apellido materno:</mat-label>\\n                <p><strong>{{ ObjSpouse.maternalLastName}}</strong></p>\\n            </div>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"16px\\\">\\n            <mat-label>Nombre:</mat-label>\\n            <p><strong>{{ ObjSpouse.name}}</strong></p>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"16px\\\">\\n            <mat-label>Curp:</mat-label>\\n            <p><strong>{{ ObjSpouse.curp}}</strong></p>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"16px\\\">\\n            <mat-label>RFC:</mat-label>\\n            <p><strong>{{ ObjSpouse.rfc}}</strong></p>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"16px\\\">\\n            <mat-label>En caso de haber tenido otro nombre anteriormente favor de indicarlo</mat-label>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"16px\\\">\\n            <div fxFlex=\\\"50\\\">\\n                <mat-label>Apellido paterno:</mat-label>\\n                <p><strong>{{ ObjSpouse.oldPaternalLastName}}</strong></p>\\n            </div>\\n            <div fxFlex=\\\"50\\\">\\n                <mat-label>Apellido materno:</mat-label>\\n                <p><strong>{{ ObjSpouse.oldMaternalLastName}}</strong></p>\\n            </div>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"16px\\\">\\n            <mat-label>Nombre:</mat-label>\\n            <p><strong>{{ ObjSpouse.oldPaternalLastName}}</strong></p>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"16px\\\">\\n            <mat-label>Nacionalidad:</mat-label>\\n            <p><strong>{{ nationality[ObjSpouse.nationality]}}</strong></p>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"16px\\\">\\n            <mat-label>Especifique (Solo extrangera):</mat-label>\\n            <p><strong>{{ ObjSpouse.speticNationality}}</strong></p>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"16px\\\">\\n            <mat-label>Genero:</mat-label>\\n            <p><strong>{{ genero[ObjSpouse.gender -1]}}</strong></p>\\n        </div>\\n\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"16px\\\">\\n            <mat-label>Fecha de nacimiento:</mat-label>\\n            <p><strong>{{ ObjSpouse.dateOfBirth| date}}</strong></p>\\n        </div>\\n    </mat-card-content>\\n</mat-card>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {RequestDetalleCredito} from '../../interfaces/request-detalle-credito';\nimport {ServicesDetalleCreditoService} from '../../services/services-detalle-credito.service';\nimport {Spouse} from '../../interfaces/spouse';\n\n@Component({\n    selector: 'app-spouse-detail',\n    templateUrl: './detail.component.html',\n    styleUrls: ['./detail.component.scss']\n})\nexport class DetailComponent implements OnInit {\n    ObjSpouse: Spouse = {\n        idSpouse: 0,\n        paternalLastName: '',\n        maternalLastName: '',\n        name: '',\n        rfc: '',\n        curp: '',\n        oldPaternalLastName: '',\n        oldMaternalLastName: '',\n        oldName: '',\n        nationality: '',\n        speticNationality: '',\n        gender: '',\n        countryOfResidence: '',\n        dateOfBirth: '',\n        creditApplication: ''\n    };\n    nationality: string[] = ['Mexicana', 'Extranjera'];\n    scholarship: string[] = [\n        'PRIMERA',\n        'SECUNDARIO',\n        'PREPARATORIA',\n        'TECNICA',\n        'LICENCIATURA',\n        'POSTGRADO',\n        'SIN ESPECIFICAR'\n    ];\n    statecivil: string[] = ['SOLTERO', 'CASADO', 'OTRO'];\n    maritalStatus: string[] = ['BIENES MANCOMUNADOS', 'SEPARADOS'];\n    genero: string[] = ['MASCULINO', 'FEMENINO'];\n    constructor( private srvDetalle: ServicesDetalleCreditoService,) {\n        if (srvDetalle.ObjDetalleCredito.spouse != null) {\n            this.ObjSpouse = srvDetalle.ObjDetalleCredito.spouse;\n        }\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SpouseRoutingModule { }\n","import {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SpouseRoutingModule } from './spouse-routing.module';\nimport { DetailComponent } from './detail/detail.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatIconModule} from '@angular/material/icon';\nimport {FlexModule} from '@angular/flex-layout';\n\n\n@NgModule({\n    declarations: [\n        DetailComponent\n    ],\n    exports: [\n        DetailComponent\n    ],\n    imports: [\n        CommonModule,\n        SpouseRoutingModule,\n        MatCardModule,\n        MatIconModule,\n        FlexModule\n    ],\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\n})\nexport class SpouseModule { }\n","module.exports = \"<mat-card>\\n    <mat-card-header>\\n        <mat-card-title>Detalle de información laboral</mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"16px\\\">\\n            <div fxFlex=\\\"50\\\">\\n                <mat-label>Nombre o razon social de la empresa</mat-label>\\n                <p><strong>{{ObjWork.companyName}}</strong></p>\\n            </div>\\n            <div fxFlex=\\\"50\\\">\\n                <mat-label>Tipo de contrato</mat-label>\\n                <p><strong>{{ typeContrat[ObjWork.typeContract] }}</strong></p>\\n            </div>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"16px\\\">\\n            <div fxFlex=\\\"50\\\">\\n                <mat-label>Puesto/Oupación</mat-label>\\n                <p><strong>{{typeOcupacion[ObjWork.position]}}</strong></p>\\n            </div>\\n            <div fxFlex=\\\"50\\\">\\n                <mat-label>Otro(especifique)</mat-label>\\n                <p><strong>{{ObjWork.specifyPosition}}</strong></p>\\n            </div>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"16px\\\">\\n            <div fxFlex=\\\"50\\\">\\n                <mat-label>Actividad/Giro</mat-label>\\n                <p><strong>{{typeLaboral[ObjWork.laboral_activity]}}</strong></p>\\n            </div>\\n            <div fxFlex=\\\"50\\\">\\n                <mat-label>Actividad especifica</mat-label>\\n                <p><strong>{{ObjWork.specifyLaboralActivity}}</strong></p>\\n            </div>\\n        </div>\\n        <mat-divider></mat-divider>\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"16px\\\">\\n            <mat-label>Domicilio laboral en México:</mat-label>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"16px\\\">\\n            <mat-label>Calle/Avenida/Via</mat-label>\\n            <p><strong>{{ObjWork.address}}</strong></p>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"16px\\\">\\n            <div fxFlex=\\\"50\\\">\\n                <mat-label>Numero Exterior</mat-label>\\n                <p><strong>{{ObjWork.external_number}}</strong></p>\\n            </div>\\n            <div fxFlex=\\\"50\\\">\\n                <mat-label>Numero Interior</mat-label>\\n                <p><strong>{{ObjWork.interior_number}}</strong></p>\\n            </div>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"16px\\\">\\n            <div fxFlex=\\\"50\\\">\\n                <mat-label>Codigo Postal</mat-label>\\n                <p><strong>{{ObjWork.postalCode}}</strong></p>\\n            </div>\\n            <div fxFlex=\\\"50\\\">\\n                <mat-label>Colonia</mat-label>\\n                <p><strong>{{ObjWork.suburb}}</strong></p>\\n            </div>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"16px\\\">\\n            <div fxFlex=\\\"30\\\">\\n                <mat-label>Delegacion/Municipio/Demarcacion politica</mat-label>\\n                <p><strong>{{ObjWork.municipality}}</strong></p>\\n            </div>\\n            <div fxFlex=\\\"30\\\">\\n                <mat-label>Ciudad/Poblacion</mat-label>\\n                <p><strong>{{ObjWork.city}}</strong></p>\\n            </div>\\n            <div fxFlex=\\\"30\\\">\\n                <mat-label>Entidad Federativa/Estado/Provincia</mat-label>\\n                <p><strong>{{ObjWork.state}}</strong></p>\\n            </div>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"16px\\\">\\n            <div fxFlex=\\\"50\\\">\\n                <mat-label>Telefono de oficina</mat-label>\\n                <p><strong>{{ObjWork.officePhone}}</strong></p>\\n            </div>\\n            <div fxFlex=\\\"50\\\">\\n                <mat-label>Extension</mat-label>\\n                <p><strong>{{ObjWork.officePhoneExtension}}</strong></p>\\n            </div>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"16px\\\">\\n            <mat-label>Antiguedad en el empleo:</mat-label>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"16px\\\">\\n            <div fxFlex=\\\"50\\\">\\n                <mat-label>Actual años</mat-label>\\n                <p><strong>{{ObjWork.nowWorkSeniority}}</strong></p>\\n            </div>\\n            <div fxFlex=\\\"50\\\">\\n                <mat-label>Anterior (años)</mat-label>\\n                <p><strong>{{ObjWork.previousWorkSeniority}}</strong></p>\\n            </div>\\n        </div>\\n    </mat-card-content>\\n</mat-card>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {RequestDetalleCredito} from '../../interfaces/request-detalle-credito';\nimport {ServicesDetalleCreditoService} from '../../services/services-detalle-credito.service';\nimport {Work} from '../../interfaces/work';\n@Component({\n  selector: 'app-work-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.scss']\n})\nexport class DetailComponent implements OnInit {\n  ObjWork: Work = {\n      idWork: 0,\n      companyName: '',\n      typeContract: -1,\n      position: -1,\n      specifyPosition: '',\n      laboral_activity: -1,\n      specifyLaboralActivity: '',\n      address: '',\n      external_number: '',\n      interior_number: '',\n      suburb: '',\n      postalCode: '',\n      municipality: '',\n      city: '',\n      state: '',\n      officePhone: '',\n      officePhoneExtension: '',\n      nowWorkSeniority: '',\n      previousWorkSeniority: '',\n      creditApplication: ''\n  };\n  typeContrat: string[] = ['TEMPORAL', 'DEFINITIVO'];\n  typeOcupacion: string[] = ['EMPLEADO', 'FUNCIONARIO', 'DIRECTIVO', 'SOCIO,DUEÑO,PROPIETARIO'\n      , 'PROFESIONAL INDEPENDIENTE', 'PENSIONADO', 'JUBILADO', 'OTRO'];\n  typeLaboral: string[] = ['COMERCIO', 'INDUSTRIA', 'SERVICIO', 'AGROPECUARIO', 'CONSTRUCCION'];\n  constructor( private srvDetalle: ServicesDetalleCreditoService) {\n      if (srvDetalle.ObjDetalleCredito.work != null) {\n          this.ObjWork = srvDetalle.ObjDetalleCredito.work;\n      }\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WorkRoutingModule { }\n","import {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { WorkRoutingModule } from './work-routing.module';\nimport { DetailComponent } from './detail/detail.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {FlexModule} from '@angular/flex-layout';\n\n\n@NgModule({\n    declarations: [\n        DetailComponent\n    ],\n    exports: [\n        DetailComponent\n    ],\n    imports: [\n        CommonModule,\n        WorkRoutingModule,\n        MatCardModule,\n        FlexModule\n    ],\n    schemas:[ CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class WorkModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    apiUrl:  'https://pimaid.dev:8443/Cpttablero'\n    //apiUrl:  'http://localhost:8080'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}