{"version":3,"sources":["webpack:///./src/app/guard/administrador.guard.ts","webpack:///./src/app/guard/promotor.guard.ts","webpack:///./src/app/guard/sync.guard.ts","webpack:///./src/app/pages/administration/administration.component.html","webpack:///./src/app/pages/administration/administration.component.scss","webpack:///./src/app/pages/administration/administration.component.ts","webpack:///./src/app/pages/administration/usuario/usuario.component.html","webpack:///./src/app/pages/administration/usuario/usuario.component.scss","webpack:///./src/app/pages/administration/usuario/usuario.component.ts","webpack:///./src/app/pages/branchoffice/branchoffice.component.html","webpack:///./src/app/pages/branchoffice/branchoffice.component.scss","webpack:///./src/app/pages/branchoffice/branchoffice.component.ts","webpack:///./src/app/pages/branchoffice/edition-branch/edition-branch.component.html","webpack:///./src/app/pages/branchoffice/edition-branch/edition-branch.component.scss","webpack:///./src/app/pages/branchoffice/edition-branch/edition-branch.component.ts","webpack:///./src/app/pages/enrolments/enrolments.component.html","webpack:///./src/app/pages/enrolments/enrolments.component.scss","webpack:///./src/app/pages/enrolments/enrolments.component.ts","webpack:///./src/app/pages/leaflet/edition/edition.component.html","webpack:///./src/app/pages/leaflet/edition/edition.component.scss","webpack:///./src/app/pages/leaflet/edition/edition.component.ts","webpack:///./src/app/pages/leaflet/leaflet.component.html","webpack:///./src/app/pages/leaflet/leaflet.component.scss","webpack:///./src/app/pages/leaflet/leaflet.component.ts","webpack:///./src/app/pages/pages-routing.module.ts","webpack:///./src/app/pages/pages.module.ts"],"names":[],"mappings":"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","file":"pages-pages-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthService} from \"../services/auth.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AdministradorGuard implements CanActivate {\n    constructor(private router:Router,\n                private authUser: AuthService) {\n    }\n\n    canActivate(\n        next: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n        if (this.authUser.getCurrentUser() == null){\n            this.router.navigate([\"/\"]);\n        }\n        let userCurrent = JSON.parse(JSON.parse(this.authUser.getCurrentUser())) ;\n        if (userCurrent.profileId == \"1\") {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthService} from \"../services/auth.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PromotorGuard implements CanActivate {\n    constructor(private router:Router,\n                private authUser: AuthService) {\n    }\n\n    canActivate(\n        next: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n        if (this.authUser.getCurrentUser() == null){\n            this.router.navigate([\"/\"]);\n        }\n        let userCurrent = JSON.parse(JSON.parse(this.authUser.getCurrentUser())) ;\n        if (userCurrent.profileId == \"2\") {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n","import {Injectable, Injector} from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport {from, Observable, of} from 'rxjs';\nimport {concatMap, first} from \"rxjs/operators\";\nimport {AuthService} from \"../services/auth.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SyncGuard implements CanActivate {\n    constructor(private router:Router,\n                private authUser: AuthService) {\n    }\n\n    canActivate(\n        next: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n        if (this.authUser.getCurrentUser() == null){\n            this.router.navigate([\"/\"]);\n        }\n        let userCurrent = JSON.parse(JSON.parse(this.authUser.getCurrentUser())) ;\n        if ((userCurrent.profileId == \"1\") || (userCurrent.profileId == \"2\") || (userCurrent.profileId == \"3\")) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n\n","module.exports = \"<h1 mat-dialog-title>Administración/Usuarios</h1>\\n<div fxLayout=\\\"row wrap\\\">\\n  <div class=\\\"layout-content\\\">\\n    <div fxFlex=\\\"100\\\" class=\\\"ui-g dashboard\\\">\\n      <div fxFlex=\\\"100\\\" class=\\\"card\\\">\\n        <div  class=\\\"flex-container\\\"\\n              fxLayout=\\\"row\\\"\\n              fxLayoutAlign=\\\"space-between center\\\">\\n          <button mat-flat-button (click)=\\\"newUser()\\\"><mat-icon>add_circle</mat-icon>Nuevo</button>\\n          &nbsp;\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Buscar\\\">\\n          </mat-form-field>\\n\\n        </div>\\n        <table mat-table #table [dataSource]=\\\"dataSource\\\" matSort >\\n          <ng-container matColumnDef=\\\"idUser\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>ID</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.idUser}} </td>\\n          </ng-container>\\n          <ng-container matColumnDef=\\\"name\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Nombres</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n          </ng-container>\\n          <ng-container matColumnDef=\\\"paternalLastName\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Apellido paterno</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.paternalLastName}} </td>\\n          </ng-container>\\n          <ng-container matColumnDef=\\\"motherLastName\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Apellido materno</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.motherLastName}} </td>\\n          </ng-container>\\n          <ng-container matColumnDef=\\\"email\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Email</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\n          </ng-container>\\n          <ng-container matColumnDef=\\\"status_flag\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Activo</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{ (element.status_flag == 1)? 'SI' : 'NO'}} </td>\\n          </ng-container>\\n          <ng-container matColumnDef=\\\"opciones\\\">\\n            <th mat-header-cell *matHeaderCellDef></th>\\n            <td mat-cell *matCellDef=\\\"let element\\\" fxLayoutAlign=\\\"center\\\">\\n              <button  (click)=\\\"editUser(element.idUser)\\\" mat-icon-button matTooltip=\\\"Datos Generales del Enrolamiento\\\" matTooltipClass=\\\"tooltip\\\">\\n                <mat-icon color=\\\"primary\\\">info</mat-icon>\\n              </button>\\n              <button  (click)=\\\"changePasswordUser(element.idUser)\\\" mat-icon-button matTooltip=\\\"Datos Generales del Enrolamiento\\\" matTooltipClass=\\\"tooltip\\\">\\n                <mat-icon color=\\\"warn\\\">policy</mat-icon>\\n              </button>\\n            </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n        </table>\\n        <mat-paginator #paginator  [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\"","module.exports = \":host ::ng-deep {\\n  height: 100%; }\\n\\n.layout-content {\\n  width: 100%; }\\n\\ntable {\\n  width: 100%; }\\n\\nth.mat-sort-header-sorted {\\n  color: black; }\\n\\n.button-tooltip {\\n  margin-top: 16px; }\\n\\n.tooltip {\\n  background: #ff9c00; }\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {MatPaginator} from \"@angular/material/paginator\";\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\nimport {UsuarioComponent} from \"./usuario/usuario.component\";\nimport {IObjRequest} from \"../../interfaces/iobj-request\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {User} from \"../../interfaces/user\";\nimport {environment} from \"../../../environments/environment\";\n\n\nlet ELEMENT_DATA: User[] =  []\n\n@Component({\n    selector: 'app-administration',\n    templateUrl: './administration.component.html',\n    styleUrls: ['./administration.component.scss']\n})\nexport class AdministrationComponent implements OnInit {\n    lyrUser:User;\n    displayedColumns: string[] = ['idUser','name', 'paternalLastName','motherLastName','email','status_flag','opciones'];\n    dataSource = new MatTableDataSource<User>(ELEMENT_DATA);\n\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n\n    constructor(public dialog: MatDialog,private httpClient: HttpClient) {\n\n    }\n\n    ngOnInit() {\n        this.dataSource.paginator = this.paginator;\n        ELEMENT_DATA = [];\n        this.dataSource.data = ELEMENT_DATA;\n        this.httpClient.get<IObjRequest>(environment.apiUrl+'/forms/employee').subscribe(\n            (response) => {\n                if(response.data.length > 0){\n                    response.data.forEach((element) => {\n                        this.lyrUser = {\n                            idUser: element.idUser,\n                            name: element.name,\n                            paternalLastName:  element.paternalLastName,\n                            motherLastName:  element.motherLastName,\n                            email: element.email,\n                            profileId:  element.profileId,\n                            confirme_email: element.email,\n                            password: '',\n                            confirme_password: '',\n                            status_flag:element.status_flag,\n                            phone:element.phone,\n                            sucursal:element.sucursal\n                        }\n                        ELEMENT_DATA.push( this.lyrUser);\n                        this.dataSource.data = ELEMENT_DATA;\n\n                    });\n                } else {\n\n                }\n            },\n            (error) => {\n\n            }\n        );\n    }\n\n    applyFilter(filterValue: string) {\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    }\n\n    newUser(){\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.autoFocus = false;\n        dialogConfig.disableClose = false;\n        this.dialog.open(UsuarioComponent, {data: {\n                model:{dataModal: \"\",\n                    dataPassword:false} }\n        });\n    }\n\n    editUser(idUser: any){\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.autoFocus = false;\n        dialogConfig.disableClose = false;\n        this.dialog.open(UsuarioComponent, {data: {\n                model:{dataModal: idUser,\n                    dataPassword:false} }\n        });\n    }\n\n    changePasswordUser(idUser: any){\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.autoFocus = false;\n        dialogConfig.disableClose = false;\n        this.dialog.open(UsuarioComponent, {data: {\n                model:{dataModal: idUser,\n                    dataPassword:true} }\n        });\n    }\n\n}\n","module.exports = \"<app-loading [hidden]=\\\"loading\\\"></app-loading>\\n<h1 mat-dialog-title style=\\\"margin-bottom:4px;\\\">Registro de Usuario</h1>\\n<h4 class=\\\"body\\\" style=\\\"margin: 0px 0px 12px 0px;\\\">\\n    <mat-label fxFlex=\\\"100\\\" class=\\\"mat-caption\\\">Todos los campos son obligatorios</mat-label>\\n</h4>\\n<div mat-dialog-content>\\n    <div class=\\\"container\\\">\\n        <div id=\\\"content\\\">\\n            <div *ngIf=\\\"!passwordVisible\\\" fxLayout=\\\"column\\\"  fxLayoutAlign=\\\"start\\\">\\n                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"16px\\\" fxLayoutAlign=\\\"flex-start\\\">\\n                    <mat-form-field fxFlex=\\\"50\\\" fxFlex.sm=\\\"100\\\">\\n                        <mat-label>Apellido paterno</mat-label>\\n                        <input matInput [(ngModel)]=\\\"ObjUser.paternalLastName\\\" placeholder=\\\"Apellido paterno\\\">\\n                    </mat-form-field>\\n                    <mat-form-field fxFlex=\\\"50\\\" fxFlex.sm=\\\"100\\\">\\n                        <mat-label>Apellido materno</mat-label>\\n                        <input matInput [(ngModel)]=\\\"ObjUser.motherLastName\\\" placeholder=\\\"Apellido materno\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div fxLayout=\\\"row\\\">\\n                    <mat-form-field fxFlex=\\\"100\\\">\\n                        <mat-label>Nombre del usuario</mat-label>\\n                        <input matInput [(ngModel)]=\\\"ObjUser.name\\\" placeholder=\\\"Nombre del usuario\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div *ngIf=\\\"userVisible\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"16px\\\" fxLayoutAlign=\\\"flex-start\\\">\\n                    <mat-form-field fxFlex=\\\"50\\\"  fxFlex.sm=\\\"100\\\">\\n                        <mat-label>Correo electronico</mat-label>\\n                        <input matInput [(ngModel)]=\\\"ObjUser.email\\\" placeholder=\\\"Correo electronico\\\">\\n                    </mat-form-field>\\n                    <mat-form-field fxFlex=\\\"50\\\"  fxFlex.sm=\\\"100\\\">\\n                        <mat-label>Confirmación de correo electronico</mat-label>\\n                        <input matInput [(ngModel)]=\\\"ObjUser.confirme_email\\\" placeholder=\\\"Confirme correo electronico\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"16px\\\" fxLayoutAlign=\\\"flex-start\\\">\\n                    <mat-form-field fxFlex=\\\"50\\\"  fxFlex.sm=\\\"100\\\">\\n                        <mat-label>Número telefonico de contacto</mat-label>\\n                        <input matInput [(ngModel)]=\\\"ObjUser.phone\\\" placeholder=\\\"Número telefonico de contacto\\\">\\n                    </mat-form-field>\\n                    <mat-form-field fxFlex=\\\"50\\\"  fxFlex.sm=\\\"100\\\">\\n                        <mat-label>Sucursal</mat-label>\\n                        <mat-select [(ngModel)]=\\\"ObjUser.sucursal\\\" [(value)]=\\\"sucursal\\\"  placeholder=\\\"Sucursal\\\">\\n                            <mat-option *ngFor=\\\"let branch of branchies\\\"\\n                                        [value]=\\\"branch.id\\\">{{branch.name}}</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"16px\\\" fxLayoutAlign=\\\"flex-start\\\">\\n                    <mat-form-field fxFlex=\\\"100\\\"  fxFlex.sm=\\\"100\\\">\\n                        <mat-label>Perfil</mat-label>\\n                        <mat-select [(ngModel)]=\\\"ObjUser.profileId\\\" [(value)]=\\\"selected\\\"  placeholder=\\\"Perfil del usuario\\\">\\n                            <mat-option value=\\\"1\\\">Administrador</mat-option>\\n                            <mat-option value=\\\"2\\\">Promotor</mat-option>\\n                            <mat-option value=\\\"3\\\">Consulta</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n                <div  *ngIf=\\\"!userVisible\\\"  fxLayout=\\\"row\\\" fxLayoutGap=\\\"16px\\\" fxLayoutAlign=\\\"flex-start\\\">\\n                    <mat-checkbox  [(ngModel)]=\\\"ObjUser.status_flag\\\">Activo</mat-checkbox>\\n                </div>\\n                <div *ngIf=\\\"userVisible\\\" fxLayout=\\\"row\\\" fxFlex=\\\"100\\\"\\n                     fxLayoutGap=\\\"16px\\\" fxLayoutAlign=\\\"flex-start\\\">\\n                    <button mat-flat-button (click)=\\\"registar()\\\">Registrar usuario</button>\\n                </div>\\n                <div *ngIf=\\\"!userVisible\\\" fxLayout=\\\"row\\\" fxFlex=\\\"100\\\"\\n                     fxLayoutGap=\\\"16px\\\" fxLayoutAlign=\\\"flex-start\\\">\\n                    <button mat-flat-button (click)=\\\"update()\\\">Actualizar usuario</button>\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"passwordVisible\\\" fxLayout=\\\"column\\\"  fxLayoutAlign=\\\"start\\\">\\n                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"16px\\\" fxLayoutAlign=\\\"flex-start\\\">\\n                    <mat-form-field fxFlex=\\\"100\\\"  fxFlex.sm=\\\"100\\\">\\n                        <mat-label>Correo electronico</mat-label>\\n                        <input matInput [(ngModel)]=\\\"ObjUser.email\\\" placeholder=\\\"Correo electronico\\\">\\n                    </mat-form-field>\\n\\n                </div>\\n                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"16px\\\" fxLayoutAlign=\\\"flex-start\\\">\\n                    <button mat-raised-button (click)=\\\"sendEmail()\\\" color=\\\"primary\\\" fxFill fxFlexFill>Enviar correo</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\"","module.exports = \"\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {  User } from '../../../interfaces/user';\nimport {IObjRequest} from \"../../../interfaces/iobj-request\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {Router} from \"@angular/router\";\nimport { DOCUMENT } from '@angular/common';\nimport { ConfirmDialogService } from \"../../../services/confirm-dialog.service\";\nimport {environment} from \"../../../../environments/environment\";\nimport {Branchoffice} from \"../../../interfaces/branchoffice\";\n\n\n\n\n@Component({\n    selector: 'app-usuario',\n    templateUrl: './usuario.component.html',\n    styleUrls: ['./usuario.component.scss']\n})\nexport class UsuarioComponent implements OnInit {\n    loading = true;\n    userId: any;\n    userVisible: boolean;\n    passwordVisible: boolean;\n    selected = '1';\n    sucursal = '1';\n    branchies: Branchoffice[] =  []\n    ObjUser: User ={\n        idUser: '',\n        name: '',\n        paternalLastName: '',\n        motherLastName: '',\n        email: '',\n        confirme_email:\"\",\n        password:\"\",\n        confirme_password:\"\",\n        profileId: \"1\",\n        status_flag:1,\n        phone: \"\",\n        sucursal: \"1\"\n    };\n\n     options = {\n        title: 'ATENCION',\n        message: '',\n        cancelText: null,\n        confirmText: 'CERRAR'\n    };\n\n    constructor(\n        private router: Router,\n        private httpClient: HttpClient,\n        private sanitizer: DomSanitizer,\n        private dialogRef: MatDialogRef<UsuarioComponent>,\n        private dialogService: ConfirmDialogService,\n        @Inject(MAT_DIALOG_DATA) data:any,\n        @Inject(DOCUMENT) private document: Document\n    ) {\n        this.userId = data.model.dataModal;\n        if (this.userId > 0) {\n            this.userVisible = false;\n        } else {\n            this.userVisible = true;\n        }\n        this.passwordVisible = data.model.dataPassword;\n\n        this.httpClient.get<IObjRequest>(environment.apiUrl+'/forms/branchoffice').subscribe(\n            (response) => {\n                if(response.data.length > 0){\n                    response.data.forEach((element) => {\n                        let lyrBranch = {\n                            id: element.id,\n                            numberBranch: element.numberBranch,\n                            name: element.name,\n                            city: element.city,\n                            state: element.state,\n                            status_flag: element.status_flag,\n                        }\n                        this.branchies.push(lyrBranch);\n                    });\n                } else {\n\n                }\n            },\n            (error) => {\n\n            }\n        );\n\n\n    }\n\n    ngOnInit() {\n        if ((this.userId > 0) || (this.userId != null)) {\n            this.httpClient.get<IObjRequest>(environment.apiUrl+'/forms/employee/'+this.userId).subscribe(\n                (response) => {\n                    if(response.result){\n                        if (response.data != null) {\n                            this.ObjUser = response.data;\n                            this.ObjUser.sucursal = this.ObjUser.sucursal + \"\";\n                        }\n                    } else {\n\n                    }\n                },\n                (error) => {\n\n                }\n            );\n        }\n    }\n\n    registar(){\n        const regularExpression = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        const passwordExp = /^(?=(?:.*\\d){1})(?=(?:.*[A-Z]){1})(?=(?:.*[a-z]){1})\\S{8,}$/;\n\n        if (this.ObjUser.email == '' || this.ObjUser.confirme_email == '' ||\n            this.ObjUser.email == null || this.ObjUser.confirme_email == null\n        ) {\n            this.options.message = \"Su correo electrónico y/o su confirmación no puede ser vacio\";\n            this.dialogService.open(this.options);\n            return false;\n        }\n\n        if (!regularExpression.test(String(this.ObjUser.email).toLowerCase()) ||\n            !regularExpression.test(String(this.ObjUser.confirme_email).toLowerCase())\n        ) {\n            this.options.message = \"Su correo electrónico y/o su confirmación no es un formato de correo electrónico\";\n            this.dialogService.open(this.options);\n            return false;\n        }\n\n        if (this.ObjUser.email != this.ObjUser.confirme_email) {\n            this.options.message = \"Su correo electrónico y su confirmación no son iguales\";\n            this.dialogService.open(this.options);\n            return false;\n        }\n\n        if (this.ObjUser.paternalLastName == '' || this.ObjUser.paternalLastName == null) {\n            this.options.message = \"El apellido paterno no puede ser vacio o nulo\";\n            this.dialogService.open(this.options);\n            return false;\n        }\n        if (this.ObjUser.name == '' || this.ObjUser.name == null) {\n            this.options.message = \"El nombre no puede ser vacio o nulo\";\n            this.dialogService.open(this.options);\n            return false;\n        }\n\n        let ObjUser = {\n            name: this.ObjUser.name,\n            paternalLastName: this.ObjUser.paternalLastName,\n            motherLastName: this.ObjUser.motherLastName,\n            profileId: (this.ObjUser.profileId)? this.ObjUser.profileId : 3,\n            password: this.ObjUser.password,\n            email: this.ObjUser.email,\n            phone: this.ObjUser.phone,\n            typeUser:2,\n            sucursal: this.ObjUser.sucursal\n        };\n        this.loading = false;\n        this.httpClient.post<IObjRequest>(environment.apiUrl+'/forms/employee',ObjUser).subscribe(\n            (response) => {\n                if(response.result){\n                    this.loading = true;\n                    this.document.location.reload();\n                } else {\n                    this.options.message = response.message;\n                    this.dialogService.open(this.options);\n                    this.loading = true;\n                    this.router.navigate(['administration/list']);\n                    /*this.dialogService.confirmed().subscribe(confirmed => {\n                        if (confirmed) {\n                            this.dialogService.canc;\n                        }\n                    });*/\n                }\n            },\n            (error) => {\n                this.options.message = \"Error en el registro del usuario\";\n                this.dialogService.open(this.options);\n                this.loading = true;\n                this.router.navigate(['administration/list']);\n            }\n        );\n    }\n\n    update(){\n        if (this.ObjUser.paternalLastName == '' || this.ObjUser.paternalLastName == null) {\n            this.options.message = \"El apellido paterno no puede ser vacio o nulo\";\n            this.dialogService.open(this.options);\n            return false;\n        }\n        if (this.ObjUser.name == '' || this.ObjUser.name == null) {\n            this.options.message = \"El nombre no puede ser vacio o nulo\";\n            this.dialogService.open(this.options);\n            return false;\n        }\n        let ObjUser = {\n            name: this.ObjUser.name,\n            paternalLastName: this.ObjUser.paternalLastName,\n            motherLastName: this.ObjUser.motherLastName,\n            profileId: this.ObjUser.profileId,\n            status_flag:(this.ObjUser.status_flag)? 1 : 0,\n            phone: this.ObjUser.phone,\n            typeUser:2,\n            sucursal: this.ObjUser.sucursal\n        };\n        this.loading = false;\n        this.httpClient.put<IObjRequest>(environment.apiUrl+'/forms/employee/'+this.userId,ObjUser).subscribe(\n            (response) => {\n                if(response.result){\n                    this.document.location.reload();\n                    this.loading = true;\n                } else {\n                    this.options.message = response.message;\n                    this.dialogService.open(this.options);\n                    this.loading = true;\n                }\n            },\n            (error) => {\n                this.options.message = \"Error en el registro del usuario\";\n                this.dialogService.open(this.options);\n                this.loading = true;\n            }\n        );\n    }\n    sendEmail(){\n        let ObjUser = {\n            username:'',\n            password:'',\n            email:this.ObjUser.email,\n        };\n        this.loading = false;\n        this.httpClient.post<IObjRequest>(environment.apiUrl+'/forms/employee/restorepassword',ObjUser).subscribe(\n            (response) => {\n                if(response.result){\n                    this.loading = true;\n                    this.options.message = \"Se ha enviado un correo electrónico con su nueva contraseña\";\n                    this.dialogService.open(this.options);\n\n                } else {\n                    this.loading = true;\n                    this.options.message = response.message;\n                    this.dialogService.open(this.options);\n\n                }\n            },\n            (error) => {\n                this.loading = true;\n                this.options.message = \"Error en el registro del usuario\";\n                this.dialogService.open(this.options);\n\n            }\n        );\n    }\n}\n","module.exports = \"<h1 mat-dialog-title>Administración/Sucursales</h1>\\n<div fxLayout=\\\"row wrap\\\">\\n    <div class=\\\"layout-content\\\">\\n        <div fxFlex=\\\"100\\\" class=\\\"ui-g dashboard\\\">\\n            <div fxFlex=\\\"100\\\" class=\\\"card\\\">\\n                <div  class=\\\"flex-container\\\"\\n                      fxLayout=\\\"row\\\"\\n                      fxLayoutAlign=\\\"space-between center\\\">\\n                    <button mat-flat-button (click)=\\\"newBranch()\\\"><mat-icon>add_circle</mat-icon>Nuevo</button>\\n                    &nbsp;<mat-form-field>\\n                    <input matInput placeholder=\\\"Buscar\\\">\\n                </mat-form-field>\\n                </div>\\n                <table mat-table #table [dataSource]=\\\"dataSource\\\" matSort >\\n                    <ng-container matColumnDef=\\\"id\\\">\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>ID</th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\n                    </ng-container>\\n                    <ng-container matColumnDef=\\\"name\\\">\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Sucursal</th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n                    </ng-container>\\n                    <ng-container matColumnDef=\\\"city\\\">\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Ciudad</th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.city}} </td>\\n                    </ng-container>\\n                    <ng-container matColumnDef=\\\"state\\\">\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Estado</th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{ state[element.state-1]}} </td>\\n                    </ng-container>\\n                    <ng-container matColumnDef=\\\"status_flag\\\">\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Activo</th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{ (element.status_flag == 1)? 'SI' : 'NO'}} </td>\\n                    </ng-container>\\n                    <ng-container matColumnDef=\\\"opciones\\\">\\n                        <th mat-header-cell *matHeaderCellDef></th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\" fxLayoutAlign=\\\"center\\\">\\n                            <button  (click)=\\\"editBranch(element.id)\\\" mat-icon-button matTooltip=\\\"Datos Generales del Enrolamiento\\\" matTooltipClass=\\\"tooltip\\\">\\n                                <mat-icon color=\\\"primary\\\">info</mat-icon>\\n                            </button>\\n                        </td>\\n                    </ng-container>\\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n                </table>\\n                <mat-paginator #paginator  [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\"","module.exports = \":host ::ng-deep {\\n  height: 100%; }\\n\\n.layout-content {\\n  width: 100%; }\\n\\ntable {\\n  width: 100%; }\\n\\nth.mat-sort-header-sorted {\\n  color: black; }\\n\\n.button-tooltip {\\n  margin-top: 16px; }\\n\\n.tooltip {\\n  background: #ff9c00; }\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {User} from \"../../interfaces/user\";\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {MatPaginator} from \"@angular/material/paginator\";\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {IObjRequest} from \"../../interfaces/iobj-request\";\nimport {environment} from \"../../../environments/environment\";\nimport {EditionBranchComponent } from \"./edition-branch/edition-branch.component\";\nimport {Branchoffice} from \"../../interfaces/branchoffice\";\n\nlet ELEMENT_DATA: Branchoffice[] =  []\n\n\n@Component({\n  selector: 'app-branchoffice',\n  templateUrl: './branchoffice.component.html',\n  styleUrls: ['./branchoffice.component.scss']\n})\nexport class BranchofficeComponent implements OnInit {\n\n  lyrBranch:Branchoffice;\n  displayedColumns: string[] = ['id','name', 'city','state','status_flag','opciones'];\n  dataSource = new MatTableDataSource<Branchoffice>(ELEMENT_DATA);\n  state = [\n    \"Aguascalientes\",\n    \"Baja California\",\n    \"Baja California Sur\",\n    \"Campeche\",\n    \"Coahuila de Zaragoza\",\n    \"Colima\",\n    \"Chiapas\",\n    \"Chihuahua\",\n    \"Ciudad de México\",\n    \"Durango\",\n    \"Guanajuato\",\n    \"Guerrero\",\n    \"Hidalgo\",\n    \"Jalisco\",\n    \"México\",\n    \"Michoacán de Ocampo\",\n    \"Morelos\",\n    \"Nayarit\",\n    \"Nuevo León\",\n    \"Oaxaca\",\n    \"Puebla\",\n    \"Querétaro\",\n    \"Quintana Roo\",\n    \"San Luis Potosí\",\n    \"Sinaloa\",\n    \"Sonora\",\n    \"Tabasco\",\n    \"Tamaulipas\",\n    \"Tlaxcala\",\n    \"Veracruz de Ignacio de la Llave\",\n    \"Yucatán\",\n    \"Zacatecas\"\n  ]\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(public dialog: MatDialog,private httpClient: HttpClient) {\n\n  }\n\n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\n    ELEMENT_DATA = [];\n    this.dataSource.data = ELEMENT_DATA;\n    this.httpClient.get<IObjRequest>(environment.apiUrl+'/forms/branchoffice').subscribe(\n        (response) => {\n          if(response.data.length > 0){\n            response.data.forEach((element) => {\n              this.lyrBranch = {\n                id: element.id,\n                numberBranch: element.numberBranch,\n                name: element.name,\n                city: element.city,\n                state: element.state,\n                status_flag: element.status_flag,\n              }\n              ELEMENT_DATA.push( this.lyrBranch);\n              this.dataSource.data = ELEMENT_DATA;\n            });\n          } else {\n\n          }\n        },\n        (error) => {\n\n        }\n    );\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  newBranch(){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = false;\n    dialogConfig.disableClose = false;\n    this.dialog.open(EditionBranchComponent, {data: {\n        model:{dataModal: \"\"} }\n    });\n  }\n\n  editBranch(idBranch: any){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = false;\n    dialogConfig.disableClose = false;\n    this.dialog.open(EditionBranchComponent, {data: {\n        model:{dataModal: idBranch} }\n    });\n  }\n}\n","module.exports = \"<app-loading [hidden]=\\\"loading\\\"></app-loading>\\n<h1 mat-dialog-title style=\\\"margin-bottom:4px;\\\">Registro de sucursal</h1>\\n<h4 class=\\\"body\\\" style=\\\"margin: 0px 0px 12px 0px;\\\">\\n    <mat-label fxFlex=\\\"100\\\" class=\\\"mat-caption\\\">Todos los campos son obligatorios</mat-label>\\n</h4>\\n<div mat-dialog-content>\\n    <div class=\\\"container\\\">\\n        <div id=\\\"content\\\">\\n            <div fxLayout=\\\"column\\\"  fxLayoutAlign=\\\"start\\\">\\n                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"16px\\\" fxLayoutAlign=\\\"flex-start\\\">\\n                    <mat-form-field fxFlex=\\\"50\\\" fxFlex.sm=\\\"100\\\">\\n                        <mat-label>Nombre de Sucursal</mat-label>\\n                        <input matInput [(ngModel)]=\\\"ObjBranch.name\\\" placeholder=\\\"Nombre de sucursal\\\">\\n                    </mat-form-field>\\n\\n                    <mat-form-field fxFlex=\\\"50\\\" fxFlex.sm=\\\"100\\\">\\n                        <mat-label>Ciudad</mat-label>\\n                        <input matInput [(ngModel)]=\\\"ObjBranch.city\\\" placeholder=\\\"Ciudad\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div fxLayout=\\\"row\\\">\\n                    <mat-form-field fxFlex=\\\"100\\\">\\n                        <mat-label>Estado</mat-label>\\n                        <mat-select [(ngModel)]=\\\"ObjBranch.state\\\" [(value)]=\\\"stateSelected\\\" placeholder=\\\"Estado\\\">\\n                            <mat-option value=\\\"1\\\">Aguascalientes</mat-option>\\n                            <mat-option value=\\\"2\\\">Baja California</mat-option>\\n                            <mat-option value=\\\"3\\\">Baja California Sur</mat-option>\\n                            <mat-option value=\\\"4\\\">Campeche</mat-option>\\n                            <mat-option value=\\\"5\\\">Coahuila de Zaragoza</mat-option>\\n                            <mat-option value=\\\"6\\\">Colima</mat-option>\\n                            <mat-option value=\\\"7\\\">Chiapas</mat-option>\\n                            <mat-option value=\\\"8\\\">Chihuahua</mat-option>\\n                            <mat-option value=\\\"9\\\">Ciudad de México</mat-option>\\n                            <mat-option value=\\\"10\\\">Durango</mat-option>\\n                            <mat-option value=\\\"11\\\">Guanajuato</mat-option>\\n                            <mat-option value=\\\"12\\\">Guerrero</mat-option>\\n                            <mat-option value=\\\"13\\\">Hidalgo</mat-option>\\n                            <mat-option value=\\\"14\\\">Jalisco</mat-option>\\n                            <mat-option value=\\\"15\\\">México</mat-option>\\n                            <mat-option value=\\\"16\\\">Michoacán de Ocampo</mat-option>\\n                            <mat-option value=\\\"17\\\">Morelos</mat-option>\\n                            <mat-option value=\\\"18\\\">Nayarit</mat-option>\\n                            <mat-option value=\\\"19\\\">Nuevo León</mat-option>\\n                            <mat-option value=\\\"20\\\">Oaxaca</mat-option>\\n                            <mat-option value=\\\"21\\\">Puebla</mat-option>\\n                            <mat-option value=\\\"22\\\">Querétaro</mat-option>\\n                            <mat-option value=\\\"23\\\">Quintana Roo</mat-option>\\n                            <mat-option value=\\\"24\\\">San Luis Potosí</mat-option>\\n                            <mat-option value=\\\"25\\\">Sinaloa</mat-option>\\n                            <mat-option value=\\\"26\\\">Sonora</mat-option>\\n                            <mat-option value=\\\"27\\\">Tabasco</mat-option>\\n                            <mat-option value=\\\"28\\\">Tamaulipas</mat-option>\\n                            <mat-option value=\\\"29\\\">Tlaxcala</mat-option>\\n                            <mat-option value=\\\"30\\\">Veracruz de Ignacio de la Llave</mat-option>\\n                            <mat-option value=\\\"31\\\">Yucatán</mat-option>\\n                            <mat-option value=\\\"32\\\">Zacatecas</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n\\n                <div *ngIf=\\\"branchVisible\\\" fxLayout=\\\"row\\\" fxFlex=\\\"100\\\"\\n                     fxLayoutGap=\\\"16px\\\" fxLayoutAlign=\\\"flex-start\\\">\\n                    <button mat-flat-button (click)=\\\"registar()\\\">Registrar sucursal</button>\\n                </div>\\n                <div *ngIf=\\\"!branchVisible\\\" fxLayout=\\\"row\\\" fxFlex=\\\"100\\\" fxLayoutGap=\\\"16px\\\" fxLayoutAlign=\\\"flex-start\\\">\\n                    <button mat-flat-button (click)=\\\"update()\\\">Actualizar sucursal</button>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\\n\\n\"","module.exports = \"\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {Branchoffice} from \"../../../interfaces/branchoffice\";\nimport {Router} from \"@angular/router\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {ConfirmDialogService} from \"../../../services/confirm-dialog.service\";\nimport {AuthService} from \"../../../services/auth.service\";\nimport {DOCUMENT} from \"@angular/common\";\nimport {IObjRequest} from \"../../../interfaces/iobj-request\";\nimport {environment} from \"../../../../environments/environment\";\n\n@Component({\n  selector: 'app-edition-branch',\n  templateUrl: './edition-branch.component.html',\n  styleUrls: ['./edition-branch.component.scss']\n})\nexport class EditionBranchComponent implements OnInit {\n  loading = true;\n  branchVisible: boolean;\n  ObjBranch: Branchoffice = {\n      id:null,\n      numberBranch:'0',\n      name:'',\n      city:'',\n      state:null,\n      status_flag:1\n  };\n  stateSelected = 1 + \"\";\n\n\n\n\n\n  branchId: number;\n  userCurrent: any;\n  options = {\n    title: 'ATENCION',\n    message: '',\n    cancelText: null,\n    confirmText: 'CERRAR'\n  };\n\n  constructor(   private router: Router,\n                 private httpClient: HttpClient,\n                 private sanitizer: DomSanitizer,\n                 private dialogRef: MatDialogRef<EditionBranchComponent>,\n                 private dialogService: ConfirmDialogService,\n                 private authUser: AuthService,\n                 @Inject(MAT_DIALOG_DATA) data:any,\n                 @Inject(DOCUMENT) private document: Document) {\n    this.branchId = data.model.dataModal;\n    if (this.branchId > 0) {\n      this.branchVisible = false;\n    } else {\n      this.branchVisible = true;\n    }\n\n    this.userCurrent = JSON.parse(JSON.parse(this.authUser.getCurrentUser())) ;\n  }\n\n  ngOnInit() {\n    this.userCurrent = JSON.parse(JSON.parse(this.authUser.getCurrentUser()));\n    if ((this.branchId > 0) || (this.branchId != null)) {\n      this.httpClient.get<IObjRequest>(environment.apiUrl+'/forms/branchoffice/'+this.branchId).subscribe(\n          (response) => {\n            if(response.result){\n              if (response.data != null) {\n                this.ObjBranch = response.data;\n                this.ObjBranch.state = response.data.state + \"\";\n                this.stateSelected = response.data.state + \"\";\n              }\n            } else {\n\n            }\n          },\n          (error) => {\n\n          }\n      );\n    }\n  }\n\n  registar(){\n\n\n    if (this.ObjBranch.name == '' || this.ObjBranch.name == null) {\n      this.options.message = \"El nombre de la sucursal no puede ser vacio o nulo\";\n      this.dialogService.open(this.options);\n      return false;\n    }\n    if (this.ObjBranch.city == '' || this.ObjBranch.city == null) {\n      this.options.message = \"El nombre de la ciudad no puede ser vacio o nulo\";\n      this.dialogService.open(this.options);\n      return false;\n    }\n    let ObjBranch = {\n        name: this.ObjBranch.name,\n        city: this.ObjBranch.city,\n        state: this.ObjBranch.state\n    }\n\n    this.loading = false;\n    this.httpClient.post<IObjRequest>(environment.apiUrl+'/forms/branchoffice',ObjBranch).subscribe(\n        (response) => {\n          if(response.result){\n            this.loading = true;\n            this.document.location.reload();\n          } else {\n            this.options.message = response.message;\n            this.dialogService.open(this.options);\n            this.loading = true;\n            //this.router.navigate(['administration/list']);\n          }\n        },\n        (error) => {\n          this.options.message = \"Error en el registro del usuario\";\n          this.dialogService.open(this.options);\n          this.loading = true;\n          //this.router.navigate(['administration/list']);\n        }\n    );\n  }\n\n  update(){\n    if (this.ObjBranch.name == '' || this.ObjBranch.name == null) {\n      this.options.message = \"El nombre de la sucursal no puede ser vacio o nulo\";\n      this.dialogService.open(this.options);\n      return false;\n    }\n    if (this.ObjBranch.city == '' || this.ObjBranch.city == null) {\n      this.options.message = \"El nombre de la ciudad no puede ser vacio o nulo\";\n      this.dialogService.open(this.options);\n      return false;\n    }\n\n    this.loading = false;\n    this.httpClient.put<IObjRequest>(environment.apiUrl+'/forms/branchoffice/'+this.branchId,this.ObjBranch).subscribe(\n        (response) => {\n          if(response.result){\n            this.document.location.reload();\n            this.loading = true;\n          } else {\n            this.options.message = response.message;\n            this.dialogService.open(this.options);\n            this.loading = true;\n          }\n        },\n        (error) => {\n          this.options.message = \"Error en el registro del usuario\";\n          this.dialogService.open(this.options);\n          this.loading = true;\n        }\n    );\n  }\n\n\n}\n","module.exports = \"<h1 mat-dialog-title>Enrolamientos</h1>\\n<div fxLayout=\\\"row wrap\\\">\\n    <div class=\\\"layout-content\\\">\\n        <div fxFlex=\\\"100\\\" class=\\\"ui-g dashboard\\\">\\n            <div fxFlex=\\\"100\\\" class=\\\"card\\\">\\n                <div fxLayout fxLayoutAlign=\\\"space-between center\\\">\\n                    <mat-form-field fxFlex=\\\"30%\\\">\\n                        <input matInput (keydown.enter)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Buscar nombre,email\\\">\\n                    </mat-form-field>\\n                    <div fxFlex=\\\"30%\\\" fxLayoutAlign=\\\"end center\\\">\\n                        <button mat-raised-button (click)=\\\"exportExcel()\\\">\\n                            <mat-icon>file_download</mat-icon>&nbsp;Excel\\n                        </button>\\n                    </div>\\n                </div>\\n\\n                <table mat-table #table [dataSource]=\\\"dataSource\\\" matSort >\\n                    <ng-container matColumnDef=\\\"folio\\\">\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Folio</th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.folio}} </td>\\n                    </ng-container>\\n                    <ng-container matColumnDef=\\\"fecha\\\">\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Fecha Solictud</th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.fecha | date: 'yyyy-MM-dd'}}  </td>\\n                    </ng-container>\\n                    <ng-container matColumnDef=\\\"crtdBy\\\">\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Promotor</th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.crtdBy }} </td>\\n                    </ng-container>\\n\\n                    <ng-container matColumnDef=\\\"name\\\">\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Nombres</th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n                    </ng-container>\\n                    <ng-container matColumnDef=\\\"fisrtLastName\\\">\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Apellido paterno</th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.fisrtLastName}} </td>\\n                    </ng-container>\\n\\n                    <ng-container matColumnDef=\\\"secondLastName\\\">\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Apellido materno</th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.secondLastName}} </td>\\n                    </ng-container>\\n                    <ng-container matColumnDef=\\\"status\\\">\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Estatus</th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status}} </td>\\n                    </ng-container>\\n                    <ng-container matColumnDef=\\\"layerDocument\\\">\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Capa documento</th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\" >\\n                            <a mat-icon-button class=\\\"text-link\\\" (click)=\\\"dlgLayerDocument(element.folio)\\\">{{element.layerDocument}}</a>\\n                        </td>\\n                    </ng-container>\\n                    <ng-container matColumnDef=\\\"layerBiometic\\\">\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Capa Selfie</th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"  >\\n                            <a mat-icon-button class=\\\"text-link\\\" (click)=\\\"dlgLayerBiometric(element.folio)\\\"> {{element.layerBiometic}}</a>\\n                        </td>\\n                    </ng-container>\\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n                </table>\\n                <mat-paginator  #paginator\\n                                [pageSize]=\\\"pageSize\\\"\\n                                [pageSizeOptions]=\\\"[5, 10, 20]\\\"\\n                                (page)=\\\"pageEvent = $event\\\"\\n                                showFirstLastButtons></mat-paginator>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\"","module.exports = \":host ::ng-deep {\\n  height: 100%; }\\n\\n.layout-content {\\n  width: 100%; }\\n\\ntable {\\n  width: 100%; }\\n\\nth.mat-sort-header-sorted {\\n  color: black; }\\n\\ntr:hover {\\n  background: rgba(205, 211, 216, 0.35); }\\n\\ntr:active {\\n  background: #efefef; }\\n\\n.button-tooltip {\\n  margin-top: 16px; }\\n\\n.tooltip {\\n  background: #ff9c00; }\\n\\n.text-link {\\n  cursor: default; }\\n\\n.text-link:hover {\\n  cursor: pointer; }\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {MatPaginator, PageEvent} from \"@angular/material/paginator\";\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\nimport {LayerDocumentComponent} from \"../../dialogs/layer-document/layer-document.component\";\nimport {LayerBiometricComponent} from \"../../dialogs/layer-biometric/layer-biometric.component\";\nimport {LayerGovernmentComponent} from \"../../dialogs/layer-government/layer-government.component\";\nimport {IObjRequest} from \"../../interfaces/iobj-request\";\nimport {HttpClient, HttpResponse} from \"@angular/common/http\";\n\n\n\nimport { environment } from \"../../../environments/environment\";\nimport {AuthUser} from \"../../interfaces/auth\";\nimport {AuthService} from \"../../services/auth.service\";\n\nexport interface layerElement {\n    folio: string;\n    fecha: string;\n    crtdBy: string;\n    name: string;\n    fisrtLastName: string;\n    secondLastName: string;\n    status: string;\n    layerDocument: string;\n    layerBiometic: string;\n}\n\nlet ELEMENT_DATA: layerElement[] =  []\n\n\n\n@Component({\n    selector: 'app-enrolments',\n    templateUrl: './enrolments.component.html',\n    styleUrls: ['./enrolments.component.scss']\n})\nexport class EnrolmentsComponent implements OnInit {\n    loading = true;\n    lyrElt:layerElement;\n    userCurrent: any;\n    displayedColumns: string[] = ['folio', 'fecha', 'crtdBy','name', 'fisrtLastName','secondLastName','status',\n        'layerDocument', 'layerBiometic'];\n    dataSource = new MatTableDataSource<layerElement>(ELEMENT_DATA);\n    pageEvent: PageEvent;\n    pageSize = 10;\n\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n\n    constructor(public dialog: MatDialog,\n                private authUser: AuthService,\n                private httpClient:HttpClient) {\n        ELEMENT_DATA = [];\n        this.userCurrent = JSON.parse(JSON.parse(this.authUser.getCurrentUser())) ;\n    }\n\n    ngOnInit() {\n        this.userCurrent = JSON.parse(JSON.parse(this.authUser.getCurrentUser())) ;\n        ELEMENT_DATA = [];\n        this.dataSource.paginator = this.paginator;\n        this.httpClient.get<IObjRequest>(environment.apiUrl+'/catalogies/getCustomersUser/'+this.userCurrent.idUser).subscribe(\n            (result) => {\n                if(result.data.length > 0){\n                    result.data.forEach((element) => {\n                        this.lyrElt = {\n                            folio: element.customer.creditId,\n                            fecha: element.crtd_on,\n                            crtdBy: element.crtd_by,\n                            name:  element.customer.name,\n                            fisrtLastName: element.customer.paternalLastName,\n                            secondLastName: element.customer.motherLastName,\n                            status: element.status,\n                            layerDocument: element.layerDocument,\n                            layerBiometic: element.layerBiometric\n                        }\n                        ELEMENT_DATA.push(this.lyrElt);\n                        this.dataSource.data = ELEMENT_DATA;\n                    });\n                }\n            },\n            (error) => {\n\n            }\n        );\n    }\n\n    private dataTable(data:any):void {\n        ELEMENT_DATA = [];\n        this.dataSource.data = ELEMENT_DATA;\n        if(data.length > 0){\n            data.forEach((element) => {\n                this.lyrElt = {\n                    folio: element.customer.creditId,\n                    fecha: element.customer.birthday,\n                    crtdBy: element.crtd_by,\n                    name:  element.customer.name,\n                    fisrtLastName: element.customer.paternalLastName,\n                    secondLastName: element.customer.motherLastName,\n                    status: element.status,\n                    layerDocument: element.layerDocument,\n                    layerBiometic: element.layerBiometric\n                }\n                ELEMENT_DATA.push(this.lyrElt);\n                this.dataSource.data = ELEMENT_DATA;\n\n            });\n        }\n    }\n\n    private isNaN (val) {\n        return Number.isNaN(parseFloat(val))? 0: val;\n    }\n\n    private applyFilter(filterValue: string) {\n        let dataFilter = {\n            startdate: \"\",\n            enddate: \"\",\n            status: \"\",\n            search: filterValue\n        }\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n        if (this.dataSource.filteredData.length == 0) {\n            ELEMENT_DATA = [];\n            this.dataSource.data = ELEMENT_DATA;\n            this.httpClient.post<IObjRequest>(environment.apiUrl+\"/filter/customerstransacion/search\",dataFilter)\n                .subscribe(\n                    (response:any) => {\n                        if (response.result) {\n                            this.dataSource.filter = '';\n                            this.dataTable(response.data);\n                        }\n                    },\n                    (error:any) => { }\n                );\n        }\n    }\n\n    exportExcel(){\n        const httpOptions = {\n            responseType: 'arraybuffer',\n            headers: new Headers()\n        };\n        // @ts-ignore\n        this.httpClient.get<Blob>(environment.apiUrl+\"/export/enrolments/excel/\"+this.userCurrent.idUser,httpOptions)\n        .subscribe(\n            (response: HttpResponse<Blob>) => {\n                let binaryData = [];\n                binaryData.push(response);\n                let downloadLink = document.createElement('a');\n                downloadLink.href = window.URL.createObjectURL(new Blob(binaryData, { type: 'blob' }));\n                downloadLink.setAttribute('download', \"enrolados.xlsx\");\n                document.body.appendChild(downloadLink);\n                downloadLink.click();\n            },\n            (error:any) => { console.log(error); this.loading = true;}\n        );\n    }\n\n    dlgLayerDocument(creditId: any){\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.autoFocus = false;\n        dialogConfig.disableClose = false;\n        dialogConfig.data = {\n            idDocument: 5\n        };\n        this.dialog.open(LayerDocumentComponent, {data: {\n                model:{dataModal: creditId} }\n        });\n    }\n\n    dlgLayerBiometric(creditId: any){\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.autoFocus = false;\n        dialogConfig.disableClose = false;\n        dialogConfig.data = {\n            idDocument: 5\n        };\n        this.dialog.open(LayerBiometricComponent, {data: {\n                model:{dataModal: creditId} }\n        });\n    }\n}\n","module.exports = \"<app-loading [hidden]=\\\"loading\\\"></app-loading>\\n<h1 mat-dialog-title style=\\\"margin-bottom:4px;\\\">Registro de prospecto</h1>\\n<h4 class=\\\"body\\\" style=\\\"margin: 0px 0px 12px 0px;\\\">\\n    <mat-label fxFlex=\\\"100\\\" class=\\\"mat-caption\\\">Todos los campos son obligatorios</mat-label>\\n</h4>\\n<div mat-dialog-content>\\n    <div class=\\\"container\\\">\\n        <div id=\\\"content\\\">\\n            <div *ngIf=\\\"!passwordVisible\\\" fxLayout=\\\"column\\\"  fxLayoutAlign=\\\"start\\\">\\n                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"16px\\\" fxLayoutAlign=\\\"flex-start\\\">\\n                    <mat-form-field fxFlex=\\\"50\\\" fxFlex.sm=\\\"100\\\">\\n                        <mat-label>Apellido paterno</mat-label>\\n                        <input matInput [(ngModel)]=\\\"ObjUser.paternalLastName\\\" placeholder=\\\"Apellido paterno\\\">\\n                    </mat-form-field>\\n                    <mat-form-field fxFlex=\\\"50\\\" fxFlex.sm=\\\"100\\\">\\n                        <mat-label>Apellido materno</mat-label>\\n                        <input matInput [(ngModel)]=\\\"ObjUser.motherLastName\\\" placeholder=\\\"Apellido materno\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div fxLayout=\\\"row\\\">\\n                    <mat-form-field fxFlex=\\\"100\\\">\\n                        <mat-label>Nombre del usuario</mat-label>\\n                        <input matInput [(ngModel)]=\\\"ObjUser.name\\\" placeholder=\\\"Nombre del usuario\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"16px\\\" fxLayoutAlign=\\\"flex-start\\\">\\n                    <mat-form-field fxFlex=\\\"50\\\"  fxFlex.sm=\\\"100\\\">\\n                        <mat-label>Correo electronico</mat-label>\\n                        <input matInput [(ngModel)]=\\\"ObjUser.email\\\" placeholder=\\\"Correo electronico\\\">\\n                    </mat-form-field>\\n                    <mat-form-field fxFlex=\\\"50\\\"  fxFlex.sm=\\\"100\\\">\\n                        <mat-label>Confirmación de correo electronico</mat-label>\\n                        <input matInput [(ngModel)]=\\\"ObjUser.confirme_email\\\" placeholder=\\\"Confirme correo electronico\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"16px\\\" fxLayoutAlign=\\\"flex-start\\\">\\n                    <mat-form-field fxFlex=\\\"50\\\"  fxFlex.sm=\\\"100\\\">\\n                        <mat-label>Número telefonico de contacto</mat-label>\\n                        <input matInput [(ngModel)]=\\\"ObjUser.phone\\\" placeholder=\\\"Número telefonico de contacto\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div *ngIf=\\\"userVisible\\\" fxLayout=\\\"row\\\" fxFlex=\\\"100\\\"\\n                     fxLayoutGap=\\\"16px\\\" fxLayoutAlign=\\\"flex-start\\\">\\n                    <button mat-flat-button (click)=\\\"registar()\\\">Registrar usuario</button>\\n                </div>\\n                <div *ngIf=\\\"!userVisible\\\" fxLayout=\\\"row\\\" fxFlex=\\\"100\\\" fxLayoutGap=\\\"16px\\\" fxLayoutAlign=\\\"flex-start\\\">\\n                    <button mat-flat-button (click)=\\\"update()\\\">Actualizar usuario</button>\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"passwordVisible\\\" fxLayout=\\\"column\\\"  fxLayoutAlign=\\\"start\\\">\\n                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"16px\\\" fxLayoutAlign=\\\"flex-start\\\">\\n                    <mat-form-field fxFlex=\\\"100\\\"  fxFlex.sm=\\\"100\\\">\\n                        <mat-label>Correo electronico</mat-label>\\n                        <input matInput [(ngModel)]=\\\"ObjUser.email\\\" placeholder=\\\"Correo electronico\\\">\\n                    </mat-form-field>\\n\\n                </div>\\n                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"16px\\\" fxLayoutAlign=\\\"flex-start\\\">\\n                    <button mat-raised-button (click)=\\\"sendEmail()\\\" color=\\\"primary\\\" fxFill fxFlexFill>Enviar correo</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\"","module.exports = \"\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {  User } from '../../../interfaces/user';\nimport {IObjRequest} from \"../../../interfaces/iobj-request\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {Router} from \"@angular/router\";\nimport { DOCUMENT } from '@angular/common';\nimport { ConfirmDialogService } from \"../../../services/confirm-dialog.service\";\nimport {environment} from \"../../../../environments/environment\";\nimport {AuthService} from \"../../../services/auth.service\";\nimport {AuthUser} from \"../../../interfaces/auth\";\n\n@Component({\n    selector: 'app-edition',\n    templateUrl: './edition.component.html',\n    styleUrls: ['./edition.component.scss']\n})\nexport class EditionComponent implements OnInit {\n    loading = true;\n    userId: any;\n    userVisible: boolean;\n    passwordVisible: boolean;\n    userCurrent: any;\n    selected = 3;\n    ObjUser: User ={\n        idUser: '',\n        name: '',\n        paternalLastName: '',\n        motherLastName: '',\n        email: '',\n        confirme_email:\"\",\n        password:\"\",\n        confirme_password:\"\",\n        profileId: 4,\n        status_flag:1,\n        phone: \"\",\n        sucursal: \"\"\n    };\n\n    options = {\n        title: 'ATENCION',\n        message: '',\n        cancelText: null,\n        confirmText: 'CERRAR'\n    };\n\n    constructor(\n        private router: Router,\n        private httpClient: HttpClient,\n        private sanitizer: DomSanitizer,\n        private dialogRef: MatDialogRef<EditionComponent>,\n        private dialogService: ConfirmDialogService,\n        private authUser: AuthService,\n        @Inject(MAT_DIALOG_DATA) data:any,\n        @Inject(DOCUMENT) private document: Document\n    ) {\n        this.userId = data.model.dataModal;\n        if (this.userId > 0) {\n            this.userVisible = false;\n        } else {\n            this.userVisible = true;\n        }\n        this.passwordVisible = data.model.dataPassword;\n        this.userCurrent = JSON.parse(JSON.parse(this.authUser.getCurrentUser())) ;\n    }\n\n    ngOnInit() {\n        this.userCurrent = JSON.parse(JSON.parse(this.authUser.getCurrentUser()));\n        if ((this.userId > 0) || (this.userId != null)) {\n            this.httpClient.get<IObjRequest>(environment.apiUrl+'/forms/userboard/'+this.userId).subscribe(\n                (response) => {\n                    if(response.result){\n                        if (response.data != null) {\n                            this.ObjUser = response.data;\n                            this.ObjUser.confirme_email = this.ObjUser.email;\n                        }\n                    } else {\n\n                    }\n                },\n                (error) => {\n\n                }\n            );\n        }\n    }\n\n    registar(){\n        const regularExpression = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        const passwordExp = /^(?=(?:.*\\d){1})(?=(?:.*[A-Z]){1})(?=(?:.*[a-z]){1})\\S{8,}$/;\n\n        if (this.ObjUser.email == '' || this.ObjUser.confirme_email == '' ||\n            this.ObjUser.email == null || this.ObjUser.confirme_email == null\n        ) {\n            this.options.message = \"Su correo electrónico y/o su confirmación no puede ser vacio\";\n            this.dialogService.open(this.options);\n            return false;\n        }\n\n        if (!regularExpression.test(String(this.ObjUser.email).toLowerCase()) ||\n            !regularExpression.test(String(this.ObjUser.confirme_email).toLowerCase())\n        ) {\n            this.options.message = \"Su correo electrónico y/o su confirmación no es un formato de correo electrónico\";\n            this.dialogService.open(this.options);\n            return false;\n        }\n\n        if (this.ObjUser.email != this.ObjUser.confirme_email) {\n            this.options.message = \"Su correo electrónico y su confirmación no son iguales\";\n            this.dialogService.open(this.options);\n            return false;\n        }\n\n        if (this.ObjUser.paternalLastName == '' || this.ObjUser.password == null) {\n            this.options.message = \"El apellido paterno no puede ser vacio o nulo\";\n            this.dialogService.open(this.options);\n            return false;\n        }\n        if (this.ObjUser.name == '' || this.ObjUser.name == null) {\n            this.options.message = \"El nombre no puede ser vacio o nulo\";\n            this.dialogService.open(this.options);\n            return false;\n        }\n\n        let ObjUser = {\n            name: this.ObjUser.name,\n            paternalLastName: this.ObjUser.paternalLastName,\n            motherLastName: this.ObjUser.motherLastName,\n            profileId: 4,\n            password: \"\",\n            email: this.ObjUser.email,\n            phone: this.ObjUser.phone,\n            sucursal: \"\",\n            typeUser:1,\n            crtd_by: this.userCurrent.email\n        };\n        this.loading = false;\n        this.httpClient.post<IObjRequest>(environment.apiUrl+'/forms/userboard/app',ObjUser).subscribe(\n            (response) => {\n                if(response.result){\n                    this.loading = true;\n                    this.document.location.reload();\n                } else {\n                    this.options.message = response.message;\n                    this.dialogService.open(this.options);\n                    this.loading = true;\n                    //this.router.navigate(['administration/list']);\n                }\n            },\n            (error) => {\n                this.options.message = \"Error en el registro del usuario\";\n                this.dialogService.open(this.options);\n                this.loading = true;\n                //this.router.navigate(['administration/list']);\n            }\n        );\n    }\n\n    update(){\n        if (this.ObjUser.paternalLastName == '' || this.ObjUser.password == null) {\n            this.options.message = \"El apellido paterno no puede ser vacio o nulo\";\n            this.dialogService.open(this.options);\n            return false;\n        }\n        if (this.ObjUser.name == '' || this.ObjUser.name == null) {\n            this.options.message = \"El nombre no puede ser vacio o nulo\";\n            this.dialogService.open(this.options);\n            return false;\n        }\n        let ObjUser = {\n            name: this.ObjUser.name,\n            paternalLastName: this.ObjUser.paternalLastName,\n            motherLastName: this.ObjUser.motherLastName,\n            profileId: 4,\n            status_flag:(this.ObjUser.status_flag)? 1 : 0,\n            typeUser:1,\n            phone: this.ObjUser.phone\n        };\n        this.loading = false;\n        this.httpClient.put<IObjRequest>(environment.apiUrl+'/forms/userboard/'+this.userId,ObjUser).subscribe(\n            (response) => {\n                if(response.result){\n                    this.document.location.reload();\n                    this.loading = true;\n                } else {\n                    this.options.message = response.message;\n                    this.dialogService.open(this.options);\n                    this.loading = true;\n                }\n            },\n            (error) => {\n                this.options.message = \"Error en el registro del usuario\";\n                this.dialogService.open(this.options);\n                this.loading = true;\n            }\n        );\n    }\n\n    changePassword(){\n        const passwordExp = /^(?=(?:.*\\d){1})(?=(?:.*[A-Z]){1})(?=(?:.*[a-z]){1})\\S{8,}$/;\n        if (this.ObjUser.password != this.ObjUser.confirme_password) {\n            this.options.message = \"Su contraseña y su confirmación no son iguales\";\n            this.dialogService.open(this.options);\n            return false;\n        }\n        if (!passwordExp.test(this.ObjUser.password)) {\n            this.options.message = \"Su contreseña debe tener por lo menos una mayuscula, un número y 8 caracteres con minimo\";\n            this.dialogService.open(this.options);\n            return false;\n        }\n        let ObjUser = {\n            password: this.ObjUser.password\n        };\n        this.loading = false;\n        this.httpClient.put<IObjRequest>(environment.apiUrl+'/forms/userboard/'+this.userId,ObjUser).subscribe(\n            (response) => {\n                if(response.result){\n                    this.loading = false;\n                    this.document.location.reload();\n                } else {\n                    this.options.message = response.message;\n                    this.dialogService.open(this.options);\n                    this.loading = true;\n                }\n            },\n            (error) => {\n                this.options.message = \"Error en el cambio de contraseña\";\n                this.dialogService.open(this.options);\n                this.loading = true;\n            }\n        );\n    }\n\n    sendEmail(){\n        let ObjUser = {\n            username:'',\n            password:'',\n            email:this.ObjUser.email,\n        };\n        this.loading = false;\n        this.httpClient.post<IObjRequest>(environment.apiUrl+'/user/user/restorepassword',ObjUser).subscribe(\n            (response) => {\n                if(response.result){\n                    this.loading = true;\n                    this.options.message = \"Se ha enviado un correo electrónico con su nueva contraseña\";\n                    this.dialogService.open(this.options);\n\n                } else {\n                    this.loading = true;\n                    this.options.message = response.message;\n                    this.dialogService.open(this.options);\n\n                }\n            },\n            (error) => {\n                this.loading = true;\n                this.options.message = \"Error en el registro del usuario\";\n                this.dialogService.open(this.options);\n\n            }\n        );\n    }\n}\n","module.exports = \"<h1 mat-dialog-title>Administración/Propectos</h1>\\n<div fxLayout=\\\"row wrap\\\">\\n  <div class=\\\"layout-content\\\">\\n    <div fxFlex=\\\"100\\\" class=\\\"ui-g dashboard\\\">\\n      <div fxFlex=\\\"100\\\" class=\\\"card\\\">\\n        <div  class=\\\"flex-container\\\"\\n              fxLayout=\\\"row\\\"\\n              fxLayout.xs=\\\"column\\\"\\n              fxLayoutAlign=\\\"space-between center\\\"\\n              fxLayout.xs=\\\"start center\\\"\\n        >\\n          <button mat-flat-button (click)=\\\"newUser()\\\"><mat-icon>add_circle</mat-icon>Nuevo</button>\\n          &nbsp;\\n            <mat-form-field fxFlex=\\\"30%\\\">\\n              <input matInput placeholder=\\\"Buscar\\\">\\n            </mat-form-field>\\n\\n          <div fxFlex=\\\"30%\\\" fxLayoutAlign=\\\"end center\\\">\\n            <button mat-raised-button (click)=\\\"exportExcel()\\\">\\n              <mat-icon>file_download</mat-icon>&nbsp;Excel\\n            </button>\\n          </div>\\n        </div>\\n        <table mat-table #table [dataSource]=\\\"dataSource\\\" matSort >\\n          <ng-container matColumnDef=\\\"idUser\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>ID</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.idUser}} </td>\\n          </ng-container>\\n          <ng-container matColumnDef=\\\"name\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Nombres</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n          </ng-container>\\n          <ng-container matColumnDef=\\\"paternalLastName\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Apellido paterno</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.paternalLastName}} </td>\\n          </ng-container>\\n          <ng-container matColumnDef=\\\"motherLastName\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Apellido materno</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.motherLastName}} </td>\\n          </ng-container>\\n          <ng-container matColumnDef=\\\"email\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Email</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\n          </ng-container>\\n          <ng-container matColumnDef=\\\"status_flag\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Activo</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{ (element.status_flag == 1)? 'SI' : 'NO'}} </td>\\n          </ng-container>\\n          <ng-container matColumnDef=\\\"opciones\\\">\\n            <th mat-header-cell *matHeaderCellDef></th>\\n            <td mat-cell *matCellDef=\\\"let element\\\" fxLayoutAlign=\\\"center\\\">\\n              <button  (click)=\\\"editUser(element.idUser)\\\" mat-icon-button matTooltip=\\\"Datos Generales del Enrolamiento\\\" matTooltipClass=\\\"tooltip\\\">\\n                <mat-icon color=\\\"primary\\\">info</mat-icon>\\n              </button>\\n              <button  (click)=\\\"changePasswordUser(element.idUser)\\\" mat-icon-button matTooltip=\\\"Datos Generales del Enrolamiento\\\" matTooltipClass=\\\"tooltip\\\">\\n                <mat-icon color=\\\"warn\\\">policy</mat-icon>\\n              </button>\\n            </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n        </table>\\n        <mat-paginator #paginator  [pageSize]=\\\"pageSize\\\"\\n                       [pageSizeOptions]=\\\"[5, 10, 20]\\\"\\n                       (page)=\\\"pageEvent = $event\\\"\\n                       showFirstLastButtons></mat-paginator>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\"","module.exports = \":host ::ng-deep {\\n  height: 100%; }\\n\\n.layout-content {\\n  width: 100%; }\\n\\ntable {\\n  width: 100%; }\\n\\nth.mat-sort-header-sorted {\\n  color: black; }\\n\\n.button-tooltip {\\n  margin-top: 16px; }\\n\\n.tooltip {\\n  background: #ff9c00; }\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {MatPaginator, PageEvent} from \"@angular/material/paginator\";\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\nimport { EditionComponent } from \"./edition/edition.component\";\nimport { IObjRequest } from \"../../interfaces/iobj-request\";\nimport {HttpClient, HttpResponse} from \"@angular/common/http\";\nimport { User } from \"../../interfaces/user\";\nimport { environment } from \"../../../environments/environment\";\nimport {layerElement} from \"../enrolments/enrolments.component\";\nimport {AuthService} from \"../../services/auth.service\";\n\n\nlet ELEMENT_DATA: User[] =  []\n\n@Component({\n    selector: 'app-leaflet',\n    templateUrl: './leaflet.component.html',\n    styleUrls: ['./leaflet.component.scss']\n})\nexport class LeafletComponent implements OnInit {\n    loading = true;\n    lyrUser:User;\n    userCurrent: any;\n    pageEvent: PageEvent;\n    pageSize = 10;\n    displayedColumns: string[] = ['idUser','name', 'paternalLastName','motherLastName','email','status_flag','opciones'];\n    dataSource = new MatTableDataSource<User>(ELEMENT_DATA);\n\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n\n    constructor(public dialog: MatDialog,\n                private httpClient: HttpClient,\n                private authUser:AuthService) {\n        this.userCurrent = JSON.parse(JSON.parse(this.authUser.getCurrentUser())) ;\n    }\n\n    ngOnInit() {\n        this.dataSource.paginator = this.paginator;\n        this.userCurrent = JSON.parse(JSON.parse(this.authUser.getCurrentUser())) ;\n        ELEMENT_DATA = [];\n        this.dataSource.data = ELEMENT_DATA;\n        this.httpClient.get<IObjRequest>(environment.apiUrl+'/catalogies/getLeafletUser/'+this.userCurrent.idUser).subscribe(\n            (response) => {\n                if(response.data.length > 0){\n                    response.data.forEach((element) => {\n                        this.lyrUser = {\n                            idUser: element.idUser,\n                            name: element.name,\n                            paternalLastName:  element.paternalLastName,\n                            motherLastName:  element.motherLastName,\n                            email: element.email,\n                            profileId:  element.profileId,\n                            confirme_email: element.email,\n                            password: '',\n                            confirme_password: '',\n                            status_flag:element.status_flag,\n                            phone:\"\",\n                            sucursal:1\n                        }\n                        ELEMENT_DATA.push( this.lyrUser);\n                        this.dataSource.data = ELEMENT_DATA;\n\n                    });\n                } else {\n\n                }\n            },\n            (error) => {\n\n            }\n        );\n    }\n\n    applyFilter(filterValue: string) {\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n    }\n\n    newUser(){\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.autoFocus = false;\n        dialogConfig.disableClose = false;\n        this.dialog.open(EditionComponent, {data: {\n                model:{dataModal: \"\",\n                    dataPassword:false} }\n        });\n    }\n\n    editUser(idUser: any){\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.autoFocus = false;\n        dialogConfig.disableClose = false;\n        this.dialog.open(EditionComponent, {data: {\n                model:{dataModal: idUser,\n                    dataPassword:false} }\n        });\n    }\n\n    exportExcel(){\n        const httpOptions = {\n            responseType: 'arraybuffer',\n            headers: new Headers()\n        };\n        // @ts-ignore\n        this.httpClient.get<Blob>(environment.apiUrl+\"/export/leaflet/excel\",httpOptions)\n        .subscribe(\n            (response: HttpResponse<Blob>) => {\n                let binaryData = [];\n                binaryData.push(response);\n                let downloadLink = document.createElement('a');\n                downloadLink.href = window.URL.createObjectURL(new Blob(binaryData, { type: 'blob' }));\n                downloadLink.setAttribute('download', \"prospectos.xlsx\");\n                document.body.appendChild(downloadLink);\n                downloadLink.click();\n            },\n            (error:any) => { console.log(error); this.loading = true;}\n        );\n    }\n\n    changePasswordUser(idUser: any){\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.autoFocus = false;\n        dialogConfig.disableClose = false;\n        this.dialog.open(EditionComponent, {data: {\n                model:{dataModal: idUser,\n                    dataPassword:true} }\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {EnrolmentsComponent} from \"./enrolments/enrolments.component\";\nimport {AdministrationComponent} from \"./administration/administration.component\";\nimport {RestorepasswordComponent} from \"./auth/restorepassword/restorepassword.component\";\nimport {LeafletComponent} from \"./leaflet/leaflet.component\";\nimport {AdministradorGuard} from \"../guard/administrador.guard\";\nimport {PromotorGuard} from \"../guard/promotor.guard\";\nimport {ConsultaGuard} from \"../guard/consulta.guard\";\nimport {SyncGuard} from \"../guard/sync.guard\";\nimport {BranchofficeComponent} from \"./branchoffice/branchoffice.component\";\n\nexport const AppsRoutes: Routes = [\n  {\n    path: 'enrolments',\n    children: [{\n        path: 'list',\n        component: EnrolmentsComponent,\n        canActivate: [SyncGuard]\n    }]\n  },\n  {\n    path: 'administration',\n    children: [{\n      path: 'list',\n      component: AdministrationComponent,\n      canActivate: [AdministradorGuard]\n    },{\n      path: 'leaflet',\n      component: LeafletComponent,\n      canActivate: [PromotorGuard]\n    },{\n      path: 'branch',\n      component: BranchofficeComponent,\n      canActivate: [AdministradorGuard]\n    }]\n  }\n];\n\n","import {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {RouterModule} from \"@angular/router\";\nimport {AppsRoutes} from \"./pages-routing.module\";\nimport { EnrolmentsComponent } from './enrolments/enrolments.component';\nimport { AdministrationComponent } from './administration/administration.component';\nimport { UsuarioComponent } from './administration/usuario/usuario.component';\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {FlexModule} from \"@angular/flex-layout\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport {MatSortModule} from \"@angular/material/sort\";\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {DashboardModule } from \"../dashboard/dashboard.module\";\nimport {FormsModule} from \"@angular/forms\";\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {MatCheckboxModule} from \"@angular/material/checkbox\";\nimport {MatCardModule} from \"@angular/material/card\";\n\nimport { LeafletComponent } from './leaflet/leaflet.component';\nimport { EditionComponent } from './leaflet/edition/edition.component';\nimport {ShareModule} from \"../share/share.module\";\nimport { BranchofficeComponent } from './branchoffice/branchoffice.component';\nimport { EditionBranchComponent } from './branchoffice/edition-branch/edition-branch.component';\n\n\n\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forChild(AppsRoutes),\n        ShareModule,\n        MatFormFieldModule,\n        MatInputModule,\n        FlexModule,\n        MatTableModule,\n        MatSortModule,\n        MatPaginatorModule,\n        MatIconModule,\n        MatButtonModule,\n        MatDialogModule,\n        DashboardModule,\n        FormsModule,\n        MatSelectModule,\n        MatCheckboxModule,\n        MatCardModule\n    ],\n    exports:[\n        UsuarioComponent\n\n    ],\n    entryComponents:[\n        UsuarioComponent,\n        EditionComponent,\n        EditionBranchComponent\n    ],\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n  declarations: [EnrolmentsComponent,\n      AdministrationComponent,\n      UsuarioComponent,\n      LeafletComponent,\n      EditionComponent,\n      BranchofficeComponent,\n      EditionBranchComponent\n\n  ]\n})\nexport class PagesModule { }\n"],"sourceRoot":""}